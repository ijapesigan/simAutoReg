[{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU General Public License","title":"GNU General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"preamble","dir":"","previous_headings":"","what":"Preamble","title":"GNU General Public License","text":"GNU General Public License free, copyleft license software kinds works. licenses software practical works designed take away freedom share change works. contrast, GNU General Public License intended guarantee freedom share change versions program–make sure remains free software users. , Free Software Foundation, use GNU General Public License software; applies also work released way authors. can apply programs, . speak free software, referring freedom, price. General Public Licenses designed make sure freedom distribute copies free software (charge wish), receive source code can get want , can change software use pieces new free programs, know can things. protect rights, need prevent others denying rights asking surrender rights. Therefore, certain responsibilities distribute copies software, modify : responsibilities respect freedom others. example, distribute copies program, whether gratis fee, must pass recipients freedoms received. must make sure , , receive can get source code. must show terms know rights. Developers use GNU GPL protect rights two steps: (1) assert copyright software, (2) offer License giving legal permission copy, distribute /modify . developers’ authors’ protection, GPL clearly explains warranty free software. users’ authors’ sake, GPL requires modified versions marked changed, problems attributed erroneously authors previous versions. devices designed deny users access install run modified versions software inside , although manufacturer can . fundamentally incompatible aim protecting users’ freedom change software. systematic pattern abuse occurs area products individuals use, precisely unacceptable. Therefore, designed version GPL prohibit practice products. problems arise substantially domains, stand ready extend provision domains future versions GPL, needed protect freedom users. Finally, every program threatened constantly software patents. States allow patents restrict development use software general-purpose computers, , wish avoid special danger patents applied free program make effectively proprietary. prevent , GPL assures patents used render program non-free. precise terms conditions copying, distribution modification follow.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_0-definitions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"0. Definitions","title":"GNU General Public License","text":"“License” refers version 3 GNU General Public License. “Copyright” also means copyright-like laws apply kinds works, semiconductor masks. “Program” refers copyrightable work licensed License. licensee addressed “”. “Licensees” “recipients” may individuals organizations. “modify” work means copy adapt part work fashion requiring copyright permission, making exact copy. resulting work called “modified version” earlier work work “based ” earlier work. “covered work” means either unmodified Program work based Program. “propagate” work means anything , without permission, make directly secondarily liable infringement applicable copyright law, except executing computer modifying private copy. Propagation includes copying, distribution (without modification), making available public, countries activities well. “convey” work means kind propagation enables parties make receive copies. Mere interaction user computer network, transfer copy, conveying. interactive user interface displays “Appropriate Legal Notices” extent includes convenient prominently visible feature (1) displays appropriate copyright notice, (2) tells user warranty work (except extent warranties provided), licensees may convey work License, view copy License. interface presents list user commands options, menu, prominent item list meets criterion.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_1-source-code","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"1. Source Code","title":"GNU General Public License","text":"“source code” work means preferred form work making modifications . “Object code” means non-source form work. “Standard Interface” means interface either official standard defined recognized standards body, , case interfaces specified particular programming language, one widely used among developers working language. “System Libraries” executable work include anything, work whole, () included normal form packaging Major Component, part Major Component, (b) serves enable use work Major Component, implement Standard Interface implementation available public source code form. “Major Component”, context, means major essential component (kernel, window system, ) specific operating system () executable work runs, compiler used produce work, object code interpreter used run . “Corresponding Source” work object code form means source code needed generate, install, (executable work) run object code modify work, including scripts control activities. However, include work’s System Libraries, general-purpose tools generally available free programs used unmodified performing activities part work. example, Corresponding Source includes interface definition files associated source files work, source code shared libraries dynamically linked subprograms work specifically designed require, intimate data communication control flow subprograms parts work. Corresponding Source need include anything users can regenerate automatically parts Corresponding Source. Corresponding Source work source code form work.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_2-basic-permissions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"2. Basic Permissions","title":"GNU General Public License","text":"rights granted License granted term copyright Program, irrevocable provided stated conditions met. License explicitly affirms unlimited permission run unmodified Program. output running covered work covered License output, given content, constitutes covered work. License acknowledges rights fair use equivalent, provided copyright law. may make, run propagate covered works convey, without conditions long license otherwise remains force. may convey covered works others sole purpose make modifications exclusively , provide facilities running works, provided comply terms License conveying material control copyright. thus making running covered works must exclusively behalf, direction control, terms prohibit making copies copyrighted material outside relationship . Conveying circumstances permitted solely conditions stated . Sublicensing allowed; section 10 makes unnecessary.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_3-protecting-users-legal-rights-from-anti-circumvention-law","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"3. Protecting Users’ Legal Rights From Anti-Circumvention Law","title":"GNU General Public License","text":"covered work shall deemed part effective technological measure applicable law fulfilling obligations article 11 WIPO copyright treaty adopted 20 December 1996, similar laws prohibiting restricting circumvention measures. convey covered work, waive legal power forbid circumvention technological measures extent circumvention effected exercising rights License respect covered work, disclaim intention limit operation modification work means enforcing, work’s users, third parties’ legal rights forbid circumvention technological measures.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_4-conveying-verbatim-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"4. Conveying Verbatim Copies","title":"GNU General Public License","text":"may convey verbatim copies Program’s source code receive , medium, provided conspicuously appropriately publish copy appropriate copyright notice; keep intact notices stating License non-permissive terms added accord section 7 apply code; keep intact notices absence warranty; give recipients copy License along Program. may charge price price copy convey, may offer support warranty protection fee.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_5-conveying-modified-source-versions","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"5. Conveying Modified Source Versions","title":"GNU General Public License","text":"may convey work based Program, modifications produce Program, form source code terms section 4, provided also meet conditions: ) work must carry prominent notices stating modified , giving relevant date. b) work must carry prominent notices stating released License conditions added section 7. requirement modifies requirement section 4 “keep intact notices”. c) must license entire work, whole, License anyone comes possession copy. License therefore apply, along applicable section 7 additional terms, whole work, parts, regardless packaged. License gives permission license work way, invalidate permission separately received . d) work interactive user interfaces, must display Appropriate Legal Notices; however, Program interactive interfaces display Appropriate Legal Notices, work need make . compilation covered work separate independent works, nature extensions covered work, combined form larger program, volume storage distribution medium, called “aggregate” compilation resulting copyright used limit access legal rights compilation’s users beyond individual works permit. Inclusion covered work aggregate cause License apply parts aggregate.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_6-conveying-non-source-forms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"6. Conveying Non-Source Forms","title":"GNU General Public License","text":"may convey covered work object code form terms sections 4 5, provided also convey machine-readable Corresponding Source terms License, one ways: ) Convey object code , embodied , physical product (including physical distribution medium), accompanied Corresponding Source fixed durable physical medium customarily used software interchange. b) Convey object code , embodied , physical product (including physical distribution medium), accompanied written offer, valid least three years valid long offer spare parts customer support product model, give anyone possesses object code either (1) copy Corresponding Source software product covered License, durable physical medium customarily used software interchange, price reasonable cost physically performing conveying source, (2) access copy Corresponding Source network server charge. c) Convey individual copies object code copy written offer provide Corresponding Source. alternative allowed occasionally noncommercially, received object code offer, accord subsection 6b. d) Convey object code offering access designated place (gratis charge), offer equivalent access Corresponding Source way place charge. need require recipients copy Corresponding Source along object code. place copy object code network server, Corresponding Source may different server (operated third party) supports equivalent copying facilities, provided maintain clear directions next object code saying find Corresponding Source. Regardless server hosts Corresponding Source, remain obligated ensure available long needed satisfy requirements. e) Convey object code using peer--peer transmission, provided inform peers object code Corresponding Source work offered general public charge subsection 6d. separable portion object code, whose source code excluded Corresponding Source System Library, need included conveying object code work. “User Product” either (1) “consumer product”, means tangible personal property normally used personal, family, household purposes, (2) anything designed sold incorporation dwelling. determining whether product consumer product, doubtful cases shall resolved favor coverage. particular product received particular user, “normally used” refers typical common use class product, regardless status particular user way particular user actually uses, expects expected use, product. product consumer product regardless whether product substantial commercial, industrial non-consumer uses, unless uses represent significant mode use product. “Installation Information” User Product means methods, procedures, authorization keys, information required install execute modified versions covered work User Product modified version Corresponding Source. information must suffice ensure continued functioning modified object code case prevented interfered solely modification made. convey object code work section , , specifically use , User Product, conveying occurs part transaction right possession use User Product transferred recipient perpetuity fixed term (regardless transaction characterized), Corresponding Source conveyed section must accompanied Installation Information. requirement apply neither third party retains ability install modified object code User Product (example, work installed ROM). requirement provide Installation Information include requirement continue provide support service, warranty, updates work modified installed recipient, User Product modified installed. Access network may denied modification materially adversely affects operation network violates rules protocols communication across network. Corresponding Source conveyed, Installation Information provided, accord section must format publicly documented (implementation available public source code form), must require special password key unpacking, reading copying.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_7-additional-terms","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"7. Additional Terms","title":"GNU General Public License","text":"“Additional permissions” terms supplement terms License making exceptions one conditions. Additional permissions applicable entire Program shall treated though included License, extent valid applicable law. additional permissions apply part Program, part may used separately permissions, entire Program remains governed License without regard additional permissions. convey copy covered work, may option remove additional permissions copy, part . (Additional permissions may written require removal certain cases modify work.) may place additional permissions material, added covered work, can give appropriate copyright permission. Notwithstanding provision License, material add covered work, may (authorized copyright holders material) supplement terms License terms: ) Disclaiming warranty limiting liability differently terms sections 15 16 License; b) Requiring preservation specified reasonable legal notices author attributions material Appropriate Legal Notices displayed works containing ; c) Prohibiting misrepresentation origin material, requiring modified versions material marked reasonable ways different original version; d) Limiting use publicity purposes names licensors authors material; e) Declining grant rights trademark law use trade names, trademarks, service marks; f) Requiring indemnification licensors authors material anyone conveys material (modified versions ) contractual assumptions liability recipient, liability contractual assumptions directly impose licensors authors. non-permissive additional terms considered “restrictions” within meaning section 10. Program received , part , contains notice stating governed License along term restriction, may remove term. license document contains restriction permits relicensing conveying License, may add covered work material governed terms license document, provided restriction survive relicensing conveying. add terms covered work accord section, must place, relevant source files, statement additional terms apply files, notice indicating find applicable terms. Additional terms, permissive non-permissive, may stated form separately written license, stated exceptions; requirements apply either way.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_8-termination","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"8. Termination","title":"GNU General Public License","text":"may propagate modify covered work except expressly provided License. attempt otherwise propagate modify void, automatically terminate rights License (including patent licenses granted third paragraph section 11). However, cease violation License, license particular copyright holder reinstated () provisionally, unless copyright holder explicitly finally terminates license, (b) permanently, copyright holder fails notify violation reasonable means prior 60 days cessation. Moreover, license particular copyright holder reinstated permanently copyright holder notifies violation reasonable means, first time received notice violation License (work) copyright holder, cure violation prior 30 days receipt notice. Termination rights section terminate licenses parties received copies rights License. rights terminated permanently reinstated, qualify receive new licenses material section 10.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_9-acceptance-not-required-for-having-copies","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"9. Acceptance Not Required for Having Copies","title":"GNU General Public License","text":"required accept License order receive run copy Program. Ancillary propagation covered work occurring solely consequence using peer--peer transmission receive copy likewise require acceptance. However, nothing License grants permission propagate modify covered work. actions infringe copyright accept License. Therefore, modifying propagating covered work, indicate acceptance License .","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_10-automatic-licensing-of-downstream-recipients","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"10. Automatic Licensing of Downstream Recipients","title":"GNU General Public License","text":"time convey covered work, recipient automatically receives license original licensors, run, modify propagate work, subject License. responsible enforcing compliance third parties License. “entity transaction” transaction transferring control organization, substantially assets one, subdividing organization, merging organizations. propagation covered work results entity transaction, party transaction receives copy work also receives whatever licenses work party’s predecessor interest give previous paragraph, plus right possession Corresponding Source work predecessor interest, predecessor can get reasonable efforts. may impose restrictions exercise rights granted affirmed License. example, may impose license fee, royalty, charge exercise rights granted License, may initiate litigation (including cross-claim counterclaim lawsuit) alleging patent claim infringed making, using, selling, offering sale, importing Program portion .","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_11-patents","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"11. Patents","title":"GNU General Public License","text":"“contributor” copyright holder authorizes use License Program work Program based. work thus licensed called contributor’s “contributor version”. contributor’s “essential patent claims” patent claims owned controlled contributor, whether already acquired hereafter acquired, infringed manner, permitted License, making, using, selling contributor version, include claims infringed consequence modification contributor version. purposes definition, “control” includes right grant patent sublicenses manner consistent requirements License. contributor grants non-exclusive, worldwide, royalty-free patent license contributor’s essential patent claims, make, use, sell, offer sale, import otherwise run, modify propagate contents contributor version. following three paragraphs, “patent license” express agreement commitment, however denominated, enforce patent (express permission practice patent covenant sue patent infringement). “grant” patent license party means make agreement commitment enforce patent party. convey covered work, knowingly relying patent license, Corresponding Source work available anyone copy, free charge terms License, publicly available network server readily accessible means, must either (1) cause Corresponding Source available, (2) arrange deprive benefit patent license particular work, (3) arrange, manner consistent requirements License, extend patent license downstream recipients. “Knowingly relying” means actual knowledge , patent license, conveying covered work country, recipient’s use covered work country, infringe one identifiable patents country reason believe valid. , pursuant connection single transaction arrangement, convey, propagate procuring conveyance , covered work, grant patent license parties receiving covered work authorizing use, propagate, modify convey specific copy covered work, patent license grant automatically extended recipients covered work works based . patent license “discriminatory” include within scope coverage, prohibits exercise , conditioned non-exercise one rights specifically granted License. may convey covered work party arrangement third party business distributing software, make payment third party based extent activity conveying work, third party grants, parties receive covered work , discriminatory patent license () connection copies covered work conveyed (copies made copies), (b) primarily connection specific products compilations contain covered work, unless entered arrangement, patent license granted, prior 28 March 2007. Nothing License shall construed excluding limiting implied license defenses infringement may otherwise available applicable patent law.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_12-no-surrender-of-others-freedom","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"12. No Surrender of Others’ Freedom","title":"GNU General Public License","text":"conditions imposed (whether court order, agreement otherwise) contradict conditions License, excuse conditions License. convey covered work satisfy simultaneously obligations License pertinent obligations, consequence may convey . example, agree terms obligate collect royalty conveying convey Program, way satisfy terms License refrain entirely conveying Program.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_13-use-with-the-gnu-affero-general-public-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"13. Use with the GNU Affero General Public License","title":"GNU General Public License","text":"Notwithstanding provision License, permission link combine covered work work licensed version 3 GNU Affero General Public License single combined work, convey resulting work. terms License continue apply part covered work, special requirements GNU Affero General Public License, section 13, concerning interaction network apply combination .","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_14-revised-versions-of-this-license","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"14. Revised Versions of this License","title":"GNU General Public License","text":"Free Software Foundation may publish revised /new versions GNU General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Program specifies certain numbered version GNU General Public License “later version” applies , option following terms conditions either numbered version later version published Free Software Foundation. Program specify version number GNU General Public License, may choose version ever published Free Software Foundation. Program specifies proxy can decide future versions GNU General Public License can used, proxy’s public statement acceptance version permanently authorizes choose version Program. Later license versions may give additional different permissions. However, additional obligations imposed author copyright holder result choosing follow later version.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_15-disclaimer-of-warranty","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"15. Disclaimer of Warranty","title":"GNU General Public License","text":"WARRANTY PROGRAM, EXTENT PERMITTED APPLICABLE LAW. EXCEPT OTHERWISE STATED WRITING COPYRIGHT HOLDERS /PARTIES PROVIDE PROGRAM “” WITHOUT WARRANTY KIND, EITHER EXPRESSED IMPLIED, INCLUDING, LIMITED , IMPLIED WARRANTIES MERCHANTABILITY FITNESS PARTICULAR PURPOSE. ENTIRE RISK QUALITY PERFORMANCE PROGRAM . PROGRAM PROVE DEFECTIVE, ASSUME COST NECESSARY SERVICING, REPAIR CORRECTION.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_16-limitation-of-liability","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"16. Limitation of Liability","title":"GNU General Public License","text":"EVENT UNLESS REQUIRED APPLICABLE LAW AGREED WRITING COPYRIGHT HOLDER, PARTY MODIFIES /CONVEYS PROGRAM PERMITTED , LIABLE DAMAGES, INCLUDING GENERAL, SPECIAL, INCIDENTAL CONSEQUENTIAL DAMAGES ARISING USE INABILITY USE PROGRAM (INCLUDING LIMITED LOSS DATA DATA RENDERED INACCURATE LOSSES SUSTAINED THIRD PARTIES FAILURE PROGRAM OPERATE PROGRAMS), EVEN HOLDER PARTY ADVISED POSSIBILITY DAMAGES.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"id_17-interpretation-of-sections-15-and-16","dir":"","previous_headings":"TERMS AND CONDITIONS","what":"17. Interpretation of Sections 15 and 16","title":"GNU General Public License","text":"disclaimer warranty limitation liability provided given local legal effect according terms, reviewing courts shall apply local law closely approximates absolute waiver civil liability connection Program, unless warranty assumption liability accompanies copy Program return fee. END TERMS CONDITIONS","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/LICENSE.html","id":"how-to-apply-these-terms-to-your-new-programs","dir":"","previous_headings":"","what":"How to Apply These Terms to Your New Programs","title":"GNU General Public License","text":"develop new program, want greatest possible use public, best way achieve make free software everyone can redistribute change terms. , attach following notices program. safest attach start source file effectively state exclusion warranty; file least “copyright” line pointer full notice found. Also add information contact electronic paper mail. program terminal interaction, make output short notice like starts interactive mode: hypothetical commands show w show c show appropriate parts General Public License. course, program’s commands might different; GUI interface, use “box”. also get employer (work programmer) school, , sign “copyright disclaimer” program, necessary. information , apply follow GNU GPL, see <http://www.gnu.org/licenses/>. GNU General Public License permit incorporating program proprietary programs. program subroutine library, may consider useful permit linking proprietary applications library. want , use GNU Lesser General Public License instead License. first, please read <http://www.gnu.org/philosophy/--lgpl.html>.","code":"<one line to give the program's name and a brief idea of what it does.> Copyright (C) <year>  <name of author>  This program is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.  You should have received a copy of the GNU General Public License along with this program.  If not, see <http://www.gnu.org/licenses/>. <program>  Copyright (C) <year>  <name of author> This program comes with ABSOLUTELY NO WARRANTY; for details type 'show w'. This is free software, and you are welcome to redistribute it under certain conditions; type 'show c' for details."},{"path":"https://github.com/ijapesigan/simAutoReg/articles/ar.html","id":"load-package","dir":"Articles","previous_headings":"","what":"Load package","title":"simAutoReg: Autoregressive Model - AR(p)","text":"","code":"library(simAutoReg)"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/ar.html","id":"set-arguments","dir":"Articles","previous_headings":"","what":"Set arguments","title":"simAutoReg: Autoregressive Model - AR(p)","text":"","code":"time <- 1000L burn_in <- 200L constant <- 2 coef <- c(0.5, -0.3) sd <- 0.1 p <- length(coef)"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/ar.html","id":"generate-data","dir":"Articles","previous_headings":"","what":"Generate data","title":"simAutoReg: Autoregressive Model - AR(p)","text":"","code":"set.seed(42) y <- SimAR(   time = time,   burn_in = burn_in,   constant = constant,   coef = coef,   sd = sd )"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/ar.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"simAutoReg: Autoregressive Model - AR(p)","text":"","code":"plot(x = 1:time, y = y[, 1], type = \"b\", xlab = \"time\")"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/ar.html","id":"estimate-parameters","dir":"Articles","previous_headings":"","what":"Estimate parameters","title":"simAutoReg: Autoregressive Model - AR(p)","text":"","code":"yx <- YX(data = y, p = p) Y = yx$Y X = yx$X simAutoReg:::.FitVAROLS(Y = Y, X = X) #>          [,1]      [,2]       [,3] #> [1,] 2.016592 0.5143625 -0.3232389"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/session/session.html","id":"session","dir":"Articles > Session","previous_headings":"","what":"Session","title":"simAutoReg: Session","text":"","code":"sessionInfo() #> R version 4.3.1 (2023-06-16) #> Platform: x86_64-pc-linux-gnu (64-bit) #> Running under: Ubuntu 22.04.2 LTS #>  #> Matrix products: default #> BLAS:   /usr/lib/x86_64-linux-gnu/openblas-pthread/libblas.so.3  #> LAPACK: /usr/lib/x86_64-linux-gnu/openblas-pthread/libopenblasp-r0.3.20.so;  LAPACK version 3.10.0 #>  #> locale: #>  [1] LC_CTYPE=C.UTF-8       LC_NUMERIC=C           LC_TIME=C.UTF-8        #>  [4] LC_COLLATE=C.UTF-8     LC_MONETARY=C.UTF-8    LC_MESSAGES=C.UTF-8    #>  [7] LC_PAPER=C.UTF-8       LC_NAME=C              LC_ADDRESS=C           #> [10] LC_TELEPHONE=C         LC_MEASUREMENT=C.UTF-8 LC_IDENTIFICATION=C    #>  #> time zone: UTC #> tzcode source: system (glibc) #>  #> attached base packages: #> [1] stats     graphics  grDevices utils     datasets  methods   base      #>  #> other attached packages: #> [1] simAutoReg_0.9.1 #>  #> loaded via a namespace (and not attached): #>  [1] vctrs_0.6.3       cli_3.6.1         knitr_1.43        rlang_1.1.1       #>  [5] xfun_0.39         stringi_1.7.12    purrr_1.0.1       textshaping_0.3.6 #>  [9] jsonlite_1.8.7    glue_1.6.2        rprojroot_2.0.3   htmltools_0.5.5   #> [13] ragg_1.2.5        sass_0.4.7        rmarkdown_2.23    evaluate_0.21     #> [17] jquerylib_0.1.4   fastmap_1.1.1     yaml_2.3.7        lifecycle_1.0.3   #> [21] memoise_2.0.1     stringr_1.5.0     compiler_4.3.1    fs_1.6.3          #> [25] Rcpp_1.0.11       systemfonts_1.0.4 digest_0.6.33     R6_2.5.1          #> [29] magrittr_2.0.3    bslib_0.5.0       tools_4.3.1       pkgdown_2.0.7     #> [33] cachem_1.0.8      desc_1.4.2"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/session/session.html","id":"packages","dir":"Articles > Session","previous_headings":"","what":"Packages","title":"simAutoReg: Session","text":"","code":"installed.packages() #>                Package          LibPath                           Version      #> askpass        \"askpass\"        \"/home/runner/work/_temp/Library\" \"1.1\"        #> backports      \"backports\"      \"/home/runner/work/_temp/Library\" \"1.4.1\"      #> base64enc      \"base64enc\"      \"/home/runner/work/_temp/Library\" \"0.1-3\"      #> brio           \"brio\"           \"/home/runner/work/_temp/Library\" \"1.1.3\"      #> bslib          \"bslib\"          \"/home/runner/work/_temp/Library\" \"0.5.0\"      #> cachem         \"cachem\"         \"/home/runner/work/_temp/Library\" \"1.0.8\"      #> callr          \"callr\"          \"/home/runner/work/_temp/Library\" \"3.7.3\"      #> cli            \"cli\"            \"/home/runner/work/_temp/Library\" \"3.6.1\"      #> crayon         \"crayon\"         \"/home/runner/work/_temp/Library\" \"1.5.2\"      #> curl           \"curl\"           \"/home/runner/work/_temp/Library\" \"5.0.1\"      #> cyclocomp      \"cyclocomp\"      \"/home/runner/work/_temp/Library\" \"1.1.0\"      #> desc           \"desc\"           \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> diffobj        \"diffobj\"        \"/home/runner/work/_temp/Library\" \"0.3.5\"      #> digest         \"digest\"         \"/home/runner/work/_temp/Library\" \"0.6.33\"     #> downlit        \"downlit\"        \"/home/runner/work/_temp/Library\" \"0.4.3\"      #> ellipsis       \"ellipsis\"       \"/home/runner/work/_temp/Library\" \"0.3.2\"      #> evaluate       \"evaluate\"       \"/home/runner/work/_temp/Library\" \"0.21\"       #> fansi          \"fansi\"          \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> fastmap        \"fastmap\"        \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> fontawesome    \"fontawesome\"    \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> fs             \"fs\"             \"/home/runner/work/_temp/Library\" \"1.6.3\"      #> glue           \"glue\"           \"/home/runner/work/_temp/Library\" \"1.6.2\"      #> highr          \"highr\"          \"/home/runner/work/_temp/Library\" \"0.10\"       #> htmltools      \"htmltools\"      \"/home/runner/work/_temp/Library\" \"0.5.5\"      #> httr           \"httr\"           \"/home/runner/work/_temp/Library\" \"1.4.6\"      #> jquerylib      \"jquerylib\"      \"/home/runner/work/_temp/Library\" \"0.1.4\"      #> jsonlite       \"jsonlite\"       \"/home/runner/work/_temp/Library\" \"1.8.7\"      #> knitr          \"knitr\"          \"/home/runner/work/_temp/Library\" \"1.43\"       #> lazyeval       \"lazyeval\"       \"/home/runner/work/_temp/Library\" \"0.2.2\"      #> lifecycle      \"lifecycle\"      \"/home/runner/work/_temp/Library\" \"1.0.3\"      #> lintr          \"lintr\"          \"/home/runner/work/_temp/Library\" \"3.1.0\"      #> lmtest         \"lmtest\"         \"/home/runner/work/_temp/Library\" \"0.9-40\"     #> magrittr       \"magrittr\"       \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> memoise        \"memoise\"        \"/home/runner/work/_temp/Library\" \"2.0.1\"      #> microbenchmark \"microbenchmark\" \"/home/runner/work/_temp/Library\" \"1.4.10\"     #> mime           \"mime\"           \"/home/runner/work/_temp/Library\" \"0.12\"       #> openssl        \"openssl\"        \"/home/runner/work/_temp/Library\" \"2.1.0\"      #> pillar         \"pillar\"         \"/home/runner/work/_temp/Library\" \"1.9.0\"      #> pkgbuild       \"pkgbuild\"       \"/home/runner/work/_temp/Library\" \"1.4.2\"      #> pkgconfig      \"pkgconfig\"      \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> pkgdown        \"pkgdown\"        \"/home/runner/work/_temp/Library\" \"2.0.7\"      #> pkgload        \"pkgload\"        \"/home/runner/work/_temp/Library\" \"1.3.2.1\"    #> praise         \"praise\"         \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> prettyunits    \"prettyunits\"    \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> processx       \"processx\"       \"/home/runner/work/_temp/Library\" \"3.8.2\"      #> ps             \"ps\"             \"/home/runner/work/_temp/Library\" \"1.7.5\"      #> purrr          \"purrr\"          \"/home/runner/work/_temp/Library\" \"1.0.1\"      #> R6             \"R6\"             \"/home/runner/work/_temp/Library\" \"2.5.1\"      #> ragg           \"ragg\"           \"/home/runner/work/_temp/Library\" \"1.2.5\"      #> rappdirs       \"rappdirs\"       \"/home/runner/work/_temp/Library\" \"0.3.3\"      #> rcmdcheck      \"rcmdcheck\"      \"/home/runner/work/_temp/Library\" \"1.4.0\"      #> Rcpp           \"Rcpp\"           \"/home/runner/work/_temp/Library\" \"1.0.11\"     #> RcppArmadillo  \"RcppArmadillo\"  \"/home/runner/work/_temp/Library\" \"0.12.4.1.0\" #> rematch2       \"rematch2\"       \"/home/runner/work/_temp/Library\" \"2.1.2\"      #> remotes        \"remotes\"        \"/home/runner/work/_temp/Library\" \"2.4.2.1\"    #> rex            \"rex\"            \"/home/runner/work/_temp/Library\" \"1.2.1\"      #> rlang          \"rlang\"          \"/home/runner/work/_temp/Library\" \"1.1.1\"      #> rmarkdown      \"rmarkdown\"      \"/home/runner/work/_temp/Library\" \"2.23\"       #> rprojroot      \"rprojroot\"      \"/home/runner/work/_temp/Library\" \"2.0.3\"      #> sandwich       \"sandwich\"       \"/home/runner/work/_temp/Library\" \"3.0-2\"      #> sass           \"sass\"           \"/home/runner/work/_temp/Library\" \"0.4.7\"      #> sessioninfo    \"sessioninfo\"    \"/home/runner/work/_temp/Library\" \"1.2.2\"      #> simAutoReg     \"simAutoReg\"     \"/home/runner/work/_temp/Library\" \"0.9.1\"      #> stringi        \"stringi\"        \"/home/runner/work/_temp/Library\" \"1.7.12\"     #> stringr        \"stringr\"        \"/home/runner/work/_temp/Library\" \"1.5.0\"      #> strucchange    \"strucchange\"    \"/home/runner/work/_temp/Library\" \"1.5-3\"      #> sys            \"sys\"            \"/home/runner/work/_temp/Library\" \"3.4.2\"      #> systemfonts    \"systemfonts\"    \"/home/runner/work/_temp/Library\" \"1.0.4\"      #> testthat       \"testthat\"       \"/home/runner/work/_temp/Library\" \"3.1.10\"     #> textshaping    \"textshaping\"    \"/home/runner/work/_temp/Library\" \"0.3.6\"      #> tibble         \"tibble\"         \"/home/runner/work/_temp/Library\" \"3.2.1\"      #> tinytex        \"tinytex\"        \"/home/runner/work/_temp/Library\" \"0.45\"       #> urca           \"urca\"           \"/home/runner/work/_temp/Library\" \"1.3-3\"      #> utf8           \"utf8\"           \"/home/runner/work/_temp/Library\" \"1.2.3\"      #> vars           \"vars\"           \"/home/runner/work/_temp/Library\" \"1.5-9\"      #> vctrs          \"vctrs\"          \"/home/runner/work/_temp/Library\" \"0.6.3\"      #> waldo          \"waldo\"          \"/home/runner/work/_temp/Library\" \"0.5.1\"      #> whisker        \"whisker\"        \"/home/runner/work/_temp/Library\" \"0.4.1\"      #> withr          \"withr\"          \"/home/runner/work/_temp/Library\" \"2.5.0\"      #> xfun           \"xfun\"           \"/home/runner/work/_temp/Library\" \"0.39\"       #> xml2           \"xml2\"           \"/home/runner/work/_temp/Library\" \"1.3.5\"      #> xmlparsedata   \"xmlparsedata\"   \"/home/runner/work/_temp/Library\" \"1.0.5\"      #> xopen          \"xopen\"          \"/home/runner/work/_temp/Library\" \"1.0.0\"      #> yaml           \"yaml\"           \"/home/runner/work/_temp/Library\" \"2.3.7\"      #> zoo            \"zoo\"            \"/home/runner/work/_temp/Library\" \"1.8-12\"     #> pak            \"pak\"            \"/opt/R/4.3.1/lib/R/site-library\" \"0.5.1\"      #> base           \"base\"           \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> boot           \"boot\"           \"/opt/R/4.3.1/lib/R/library\"      \"1.3-28.1\"   #> class          \"class\"          \"/opt/R/4.3.1/lib/R/library\"      \"7.3-22\"     #> cluster        \"cluster\"        \"/opt/R/4.3.1/lib/R/library\"      \"2.1.4\"      #> codetools      \"codetools\"      \"/opt/R/4.3.1/lib/R/library\"      \"0.2-19\"     #> compiler       \"compiler\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> datasets       \"datasets\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> foreign        \"foreign\"        \"/opt/R/4.3.1/lib/R/library\"      \"0.8-84\"     #> graphics       \"graphics\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grDevices      \"grDevices\"      \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> grid           \"grid\"           \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> KernSmooth     \"KernSmooth\"     \"/opt/R/4.3.1/lib/R/library\"      \"2.23-21\"    #> lattice        \"lattice\"        \"/opt/R/4.3.1/lib/R/library\"      \"0.21-8\"     #> MASS           \"MASS\"           \"/opt/R/4.3.1/lib/R/library\"      \"7.3-60\"     #> Matrix         \"Matrix\"         \"/opt/R/4.3.1/lib/R/library\"      \"1.5-4.1\"    #> methods        \"methods\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> mgcv           \"mgcv\"           \"/opt/R/4.3.1/lib/R/library\"      \"1.8-42\"     #> nlme           \"nlme\"           \"/opt/R/4.3.1/lib/R/library\"      \"3.1-162\"    #> nnet           \"nnet\"           \"/opt/R/4.3.1/lib/R/library\"      \"7.3-19\"     #> parallel       \"parallel\"       \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> rpart          \"rpart\"          \"/opt/R/4.3.1/lib/R/library\"      \"4.1.19\"     #> spatial        \"spatial\"        \"/opt/R/4.3.1/lib/R/library\"      \"7.3-16\"     #> splines        \"splines\"        \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats          \"stats\"          \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> stats4         \"stats4\"         \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> survival       \"survival\"       \"/opt/R/4.3.1/lib/R/library\"      \"3.5-5\"      #> tcltk          \"tcltk\"          \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> tools          \"tools\"          \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #> utils          \"utils\"          \"/opt/R/4.3.1/lib/R/library\"      \"4.3.1\"      #>                Priority      #> askpass        NA            #> backports      NA            #> base64enc      NA            #> brio           NA            #> bslib          NA            #> cachem         NA            #> callr          NA            #> cli            NA            #> crayon         NA            #> curl           NA            #> cyclocomp      NA            #> desc           NA            #> diffobj        NA            #> digest         NA            #> downlit        NA            #> ellipsis       NA            #> evaluate       NA            #> fansi          NA            #> fastmap        NA            #> fontawesome    NA            #> fs             NA            #> glue           NA            #> highr          NA            #> htmltools      NA            #> httr           NA            #> jquerylib      NA            #> jsonlite       NA            #> knitr          NA            #> lazyeval       NA            #> lifecycle      NA            #> lintr          NA            #> lmtest         NA            #> magrittr       NA            #> memoise        NA            #> microbenchmark NA            #> mime           NA            #> openssl        NA            #> pillar         NA            #> pkgbuild       NA            #> pkgconfig      NA            #> pkgdown        NA            #> pkgload        NA            #> praise         NA            #> prettyunits    NA            #> processx       NA            #> ps             NA            #> purrr          NA            #> R6             NA            #> ragg           NA            #> rappdirs       NA            #> rcmdcheck      NA            #> Rcpp           NA            #> RcppArmadillo  NA            #> rematch2       NA            #> remotes        NA            #> rex            NA            #> rlang          NA            #> rmarkdown      NA            #> rprojroot      NA            #> sandwich       NA            #> sass           NA            #> sessioninfo    NA            #> simAutoReg     NA            #> stringi        NA            #> stringr        NA            #> strucchange    NA            #> sys            NA            #> systemfonts    NA            #> testthat       NA            #> textshaping    NA            #> tibble         NA            #> tinytex        NA            #> urca           NA            #> utf8           NA            #> vars           NA            #> vctrs          NA            #> waldo          NA            #> whisker        NA            #> withr          NA            #> xfun           NA            #> xml2           NA            #> xmlparsedata   NA            #> xopen          NA            #> yaml           NA            #> zoo            NA            #> pak            NA            #> base           \"base\"        #> boot           \"recommended\" #> class          \"recommended\" #> cluster        \"recommended\" #> codetools      \"recommended\" #> compiler       \"base\"        #> datasets       \"base\"        #> foreign        \"recommended\" #> graphics       \"base\"        #> grDevices      \"base\"        #> grid           \"base\"        #> KernSmooth     \"recommended\" #> lattice        \"recommended\" #> MASS           \"recommended\" #> Matrix         \"recommended\" #> methods        \"base\"        #> mgcv           \"recommended\" #> nlme           \"recommended\" #> nnet           \"recommended\" #> parallel       \"base\"        #> rpart          \"recommended\" #> spatial        \"recommended\" #> splines        \"base\"        #> stats          \"base\"        #> stats4         \"base\"        #> survival       \"recommended\" #> tcltk          \"base\"        #> tools          \"base\"        #> utils          \"base\"        #>                Depends                                                                                      #> askpass        NA                                                                                           #> backports      \"R (>= 3.0.0)\"                                                                               #> base64enc      \"R (>= 2.9.0)\"                                                                               #> brio           NA                                                                                           #> bslib          \"R (>= 2.10)\"                                                                                #> cachem         NA                                                                                           #> callr          \"R (>= 3.4)\"                                                                                 #> cli            \"R (>= 3.4)\"                                                                                 #> crayon         NA                                                                                           #> curl           \"R (>= 3.0.0)\"                                                                               #> cyclocomp      NA                                                                                           #> desc           \"R (>= 3.4)\"                                                                                 #> diffobj        \"R (>= 3.1.0)\"                                                                               #> digest         \"R (>= 3.3.0)\"                                                                               #> downlit        \"R (>= 3.4.0)\"                                                                               #> ellipsis       \"R (>= 3.2)\"                                                                                 #> evaluate       \"R (>= 3.0.2)\"                                                                               #> fansi          \"R (>= 3.1.0)\"                                                                               #> fastmap        NA                                                                                           #> fontawesome    \"R (>= 3.3.0)\"                                                                               #> fs             \"R (>= 3.4)\"                                                                                 #> glue           \"R (>= 3.4)\"                                                                                 #> highr          \"R (>= 3.3.0)\"                                                                               #> htmltools      \"R (>= 2.14.1)\"                                                                              #> httr           \"R (>= 3.5)\"                                                                                 #> jquerylib      NA                                                                                           #> jsonlite       \"methods\"                                                                                    #> knitr          \"R (>= 3.3.0)\"                                                                               #> lazyeval       \"R (>= 3.1.0)\"                                                                               #> lifecycle      \"R (>= 3.4)\"                                                                                 #> lintr          \"R (>= 3.5)\"                                                                                 #> lmtest         \"R (>= 3.0.0), stats, zoo\"                                                                   #> magrittr       \"R (>= 3.4.0)\"                                                                               #> memoise        NA                                                                                           #> microbenchmark NA                                                                                           #> mime           NA                                                                                           #> openssl        NA                                                                                           #> pillar         NA                                                                                           #> pkgbuild       \"R (>= 3.4)\"                                                                                 #> pkgconfig      NA                                                                                           #> pkgdown        \"R (>= 3.1.0)\"                                                                               #> pkgload        \"R (>= 3.4.0)\"                                                                               #> praise         NA                                                                                           #> prettyunits    NA                                                                                           #> processx       \"R (>= 3.4.0)\"                                                                               #> ps             \"R (>= 3.4)\"                                                                                 #> purrr          \"R (>= 3.4.0)\"                                                                               #> R6             \"R (>= 3.0)\"                                                                                 #> ragg           NA                                                                                           #> rappdirs       \"R (>= 3.2)\"                                                                                 #> rcmdcheck      NA                                                                                           #> Rcpp           NA                                                                                           #> RcppArmadillo  \"R (>= 3.3.0)\"                                                                               #> rematch2       NA                                                                                           #> remotes        \"R (>= 3.0.0)\"                                                                               #> rex            NA                                                                                           #> rlang          \"R (>= 3.5.0)\"                                                                               #> rmarkdown      \"R (>= 3.0)\"                                                                                 #> rprojroot      \"R (>= 3.0.0)\"                                                                               #> sandwich       \"R (>= 3.0.0)\"                                                                               #> sass           NA                                                                                           #> sessioninfo    \"R (>= 2.10)\"                                                                                #> simAutoReg     \"R (>= 3.0.0)\"                                                                               #> stringi        \"R (>= 3.1)\"                                                                                 #> stringr        \"R (>= 3.3)\"                                                                                 #> strucchange    \"R (>= 2.10.0), zoo, sandwich\"                                                               #> sys            NA                                                                                           #> systemfonts    \"R (>= 3.2.0)\"                                                                               #> testthat       \"R (>= 3.1)\"                                                                                 #> textshaping    \"R (>= 3.2.0)\"                                                                               #> tibble         \"R (>= 3.4.0)\"                                                                               #> tinytex        NA                                                                                           #> urca           \"R (>= 2.0.0), methods\"                                                                      #> utf8           \"R (>= 2.10)\"                                                                                #> vars           \"R (>= 2.0.0), MASS, strucchange, urca (>= 1.1-6), lmtest (>=\\n0.9-26), sandwich (>= 2.2-4)\" #> vctrs          \"R (>= 3.5.0)\"                                                                               #> waldo          NA                                                                                           #> whisker        NA                                                                                           #> withr          \"R (>= 3.2.0)\"                                                                               #> xfun           NA                                                                                           #> xml2           \"R (>= 3.1.0)\"                                                                               #> xmlparsedata   \"R (>= 3.0.0)\"                                                                               #> xopen          \"R (>= 3.1)\"                                                                                 #> yaml           NA                                                                                           #> zoo            \"R (>= 3.1.0), stats\"                                                                        #> pak            \"R (>= 3.2)\"                                                                                 #> base           NA                                                                                           #> boot           \"R (>= 3.0.0), graphics, stats\"                                                              #> class          \"R (>= 3.0.0), stats, utils\"                                                                 #> cluster        \"R (>= 3.5.0)\"                                                                               #> codetools      \"R (>= 2.1)\"                                                                                 #> compiler       NA                                                                                           #> datasets       NA                                                                                           #> foreign        \"R (>= 4.0.0)\"                                                                               #> graphics       NA                                                                                           #> grDevices      NA                                                                                           #> grid           NA                                                                                           #> KernSmooth     \"R (>= 2.5.0), stats\"                                                                        #> lattice        \"R (>= 4.0.0)\"                                                                               #> MASS           \"R (>= 4.0), grDevices, graphics, stats, utils\"                                              #> Matrix         \"R (>= 3.5.0), methods\"                                                                      #> methods        NA                                                                                           #> mgcv           \"R (>= 3.6.0), nlme (>= 3.1-64)\"                                                             #> nlme           \"R (>= 3.5.0)\"                                                                               #> nnet           \"R (>= 3.0.0), stats, utils\"                                                                 #> parallel       NA                                                                                           #> rpart          \"R (>= 2.15.0), graphics, stats, grDevices\"                                                  #> spatial        \"R (>= 3.0.0), graphics, stats, utils\"                                                       #> splines        NA                                                                                           #> stats          NA                                                                                           #> stats4         NA                                                                                           #> survival       \"R (>= 3.5.0)\"                                                                               #> tcltk          NA                                                                                           #> tools          NA                                                                                           #> utils          NA                                                                                           #>                Imports                                                                                                                                                                                                                                                                       #> askpass        \"sys (>= 2.1)\"                                                                                                                                                                                                                                                                #> backports      NA                                                                                                                                                                                                                                                                            #> base64enc      NA                                                                                                                                                                                                                                                                            #> brio           NA                                                                                                                                                                                                                                                                            #> bslib          \"base64enc, cachem, grDevices, htmltools (>= 0.5.4), jquerylib\\n(>= 0.1.3), jsonlite, memoise (>= 2.0.1), mime, rlang, sass (>=\\n0.4.0)\"                                                                                                                                      #> cachem         \"rlang, fastmap (>= 1.1.1)\"                                                                                                                                                                                                                                                   #> callr          \"processx (>= 3.6.1), R6, utils\"                                                                                                                                                                                                                                              #> cli            \"utils\"                                                                                                                                                                                                                                                                       #> crayon         \"grDevices, methods, utils\"                                                                                                                                                                                                                                                   #> curl           NA                                                                                                                                                                                                                                                                            #> cyclocomp      \"callr, crayon, desc, remotes, withr\"                                                                                                                                                                                                                                         #> desc           \"cli, R6, rprojroot, utils\"                                                                                                                                                                                                                                                   #> diffobj        \"crayon (>= 1.3.2), tools, methods, utils, stats\"                                                                                                                                                                                                                             #> digest         \"utils\"                                                                                                                                                                                                                                                                       #> downlit        \"brio, desc, digest, evaluate, fansi, memoise, rlang, vctrs,\\nwithr, yaml\"                                                                                                                                                                                                    #> ellipsis       \"rlang (>= 0.3.0)\"                                                                                                                                                                                                                                                            #> evaluate       \"methods\"                                                                                                                                                                                                                                                                     #> fansi          \"grDevices, utils\"                                                                                                                                                                                                                                                            #> fastmap        NA                                                                                                                                                                                                                                                                            #> fontawesome    \"rlang (>= 1.0.6), htmltools (>= 0.5.1.1)\"                                                                                                                                                                                                                                    #> fs             \"methods\"                                                                                                                                                                                                                                                                     #> glue           \"methods\"                                                                                                                                                                                                                                                                     #> highr          \"xfun (>= 0.18)\"                                                                                                                                                                                                                                                              #> htmltools      \"utils, digest, grDevices, base64enc, rlang (>= 0.4.10),\\nfastmap (>= 1.1.0), ellipsis\"                                                                                                                                                                                       #> httr           \"curl (>= 3.0.0), jsonlite, mime, openssl (>= 0.8), R6\"                                                                                                                                                                                                                       #> jquerylib      \"htmltools\"                                                                                                                                                                                                                                                                   #> jsonlite       NA                                                                                                                                                                                                                                                                            #> knitr          \"evaluate (>= 0.15), highr, methods, tools, xfun (>= 0.39),\\nyaml (>= 2.1.19)\"                                                                                                                                                                                                #> lazyeval       NA                                                                                                                                                                                                                                                                            #> lifecycle      \"cli (>= 3.4.0), glue, rlang (>= 1.0.6)\"                                                                                                                                                                                                                                      #> lintr          \"backports, codetools, cyclocomp, digest, glue, knitr, rex,\\nstats, utils, xml2 (>= 1.0.0), xmlparsedata (>= 1.0.5)\"                                                                                                                                                          #> lmtest         \"graphics\"                                                                                                                                                                                                                                                                    #> magrittr       NA                                                                                                                                                                                                                                                                            #> memoise        \"rlang (>= 0.4.10), cachem\"                                                                                                                                                                                                                                                   #> microbenchmark \"graphics, stats\"                                                                                                                                                                                                                                                             #> mime           \"tools\"                                                                                                                                                                                                                                                                       #> openssl        \"askpass\"                                                                                                                                                                                                                                                                     #> pillar         \"cli (>= 2.3.0), fansi, glue, lifecycle, rlang (>= 1.0.2), utf8\\n(>= 1.1.0), utils, vctrs (>= 0.5.0)\"                                                                                                                                                                         #> pkgbuild       \"callr (>= 3.2.0), cli (>= 3.4.0), crayon, desc, prettyunits,\\nprocessx, R6, rprojroot\"                                                                                                                                                                                       #> pkgconfig      \"utils\"                                                                                                                                                                                                                                                                       #> pkgdown        \"bslib (>= 0.3.1), callr (>= 3.7.3), cli, desc, digest, downlit\\n(>= 0.4.0), fs (>= 1.4.0), httr (>= 1.4.2), jsonlite, magrittr,\\nmemoise, purrr, ragg, rlang (>= 1.0.0), rmarkdown (>=\\n1.1.9007), tibble, whisker, withr (>= 2.4.3), xml2 (>= 1.3.1),\\nyaml\"                #> pkgload        \"cli (>= 3.3.0), crayon, desc, fs, glue, methods, rlang (>=\\n1.0.3), rprojroot, utils, withr (>= 2.4.3)\"                                                                                                                                                                      #> praise         NA                                                                                                                                                                                                                                                                            #> prettyunits    NA                                                                                                                                                                                                                                                                            #> processx       \"ps (>= 1.2.0), R6, utils\"                                                                                                                                                                                                                                                    #> ps             \"utils\"                                                                                                                                                                                                                                                                       #> purrr          \"cli (>= 3.4.0), lifecycle (>= 1.0.3), magrittr (>= 1.5.0),\\nrlang (>= 0.4.10), vctrs (>= 0.5.0)\"                                                                                                                                                                             #> R6             NA                                                                                                                                                                                                                                                                            #> ragg           \"systemfonts (>= 1.0.3), textshaping (>= 0.3.0)\"                                                                                                                                                                                                                              #> rappdirs       NA                                                                                                                                                                                                                                                                            #> rcmdcheck      \"callr (>= 3.1.1.9000), cli (>= 3.0.0), curl, desc (>= 1.2.0),\\ndigest, pkgbuild, prettyunits, R6, rprojroot, sessioninfo (>=\\n1.1.1), utils, withr, xopen\"                                                                                                                   #> Rcpp           \"methods, utils\"                                                                                                                                                                                                                                                              #> RcppArmadillo  \"Rcpp (>= 0.11.0), stats, utils, methods\"                                                                                                                                                                                                                                     #> rematch2       \"tibble\"                                                                                                                                                                                                                                                                      #> remotes        \"methods, stats, tools, utils\"                                                                                                                                                                                                                                                #> rex            \"lazyeval\"                                                                                                                                                                                                                                                                    #> rlang          \"utils\"                                                                                                                                                                                                                                                                       #> rmarkdown      \"bslib (>= 0.2.5.1), evaluate (>= 0.13), fontawesome (>=\\n0.5.0), htmltools (>= 0.5.1), jquerylib, jsonlite, knitr (>=\\n1.22), methods, stringr (>= 1.2.0), tinytex (>= 0.31), tools,\\nutils, xfun (>= 0.36), yaml (>= 2.1.19)\"                                               #> rprojroot      NA                                                                                                                                                                                                                                                                            #> sandwich       \"stats, utils, zoo\"                                                                                                                                                                                                                                                           #> sass           \"fs (>= 1.2.4), rlang (>= 0.4.10), htmltools (>= 0.5.1), R6,\\nrappdirs\"                                                                                                                                                                                                       #> sessioninfo    \"cli (>= 3.1.0), tools, utils\"                                                                                                                                                                                                                                                #> simAutoReg     \"Rcpp\"                                                                                                                                                                                                                                                                        #> stringi        \"tools, utils, stats\"                                                                                                                                                                                                                                                         #> stringr        \"cli, glue (>= 1.6.1), lifecycle (>= 1.0.3), magrittr, rlang\\n(>= 1.0.0), stringi (>= 1.5.3), vctrs\"                                                                                                                                                                          #> strucchange    \"graphics, stats, utils\"                                                                                                                                                                                                                                                      #> sys            NA                                                                                                                                                                                                                                                                            #> systemfonts    NA                                                                                                                                                                                                                                                                            #> testthat       \"brio, callr (>= 3.5.1), cli (>= 3.4.0), desc, digest, ellipsis\\n(>= 0.2.0), evaluate, jsonlite, lifecycle, magrittr, methods,\\npkgload (>= 1.3.0), praise, processx (>= 3.8.2), ps (>= 1.3.4),\\nR6 (>= 2.2.0), rlang (>= 1.1.0), utils, waldo (>= 0.5.0), withr\\n(>= 2.4.3)\" #> textshaping    \"systemfonts (>= 1.0.0)\"                                                                                                                                                                                                                                                      #> tibble         \"fansi (>= 0.4.0), lifecycle (>= 1.0.0), magrittr, methods,\\npillar (>= 1.8.1), pkgconfig, rlang (>= 1.0.2), utils, vctrs\\n(>= 0.4.2)\"                                                                                                                                        #> tinytex        \"xfun (>= 0.29)\"                                                                                                                                                                                                                                                              #> urca           \"nlme, graphics, stats\"                                                                                                                                                                                                                                                       #> utf8           NA                                                                                                                                                                                                                                                                            #> vars           \"methods\"                                                                                                                                                                                                                                                                     #> vctrs          \"cli (>= 3.4.0), glue, lifecycle (>= 1.0.3), rlang (>= 1.1.0)\"                                                                                                                                                                                                                #> waldo          \"cli, diffobj (>= 0.3.4), fansi, glue, methods, rematch2, rlang\\n(>= 1.0.0), tibble\"                                                                                                                                                                                          #> whisker        NA                                                                                                                                                                                                                                                                            #> withr          \"graphics, grDevices, stats\"                                                                                                                                                                                                                                                  #> xfun           \"stats, tools\"                                                                                                                                                                                                                                                                #> xml2           \"methods\"                                                                                                                                                                                                                                                                     #> xmlparsedata   NA                                                                                                                                                                                                                                                                            #> xopen          \"processx\"                                                                                                                                                                                                                                                                    #> yaml           NA                                                                                                                                                                                                                                                                            #> zoo            \"utils, graphics, grDevices, lattice (>= 0.20-27)\"                                                                                                                                                                                                                            #> pak            \"tools,\\nutils\"                                                                                                                                                                                                                                                               #> base           NA                                                                                                                                                                                                                                                                            #> boot           NA                                                                                                                                                                                                                                                                            #> class          \"MASS\"                                                                                                                                                                                                                                                                        #> cluster        \"graphics, grDevices, stats, utils\"                                                                                                                                                                                                                                           #> codetools      NA                                                                                                                                                                                                                                                                            #> compiler       NA                                                                                                                                                                                                                                                                            #> datasets       NA                                                                                                                                                                                                                                                                            #> foreign        \"methods, utils, stats\"                                                                                                                                                                                                                                                       #> graphics       \"grDevices\"                                                                                                                                                                                                                                                                   #> grDevices      NA                                                                                                                                                                                                                                                                            #> grid           \"grDevices, utils\"                                                                                                                                                                                                                                                            #> KernSmooth     NA                                                                                                                                                                                                                                                                            #> lattice        \"grid, grDevices, graphics, stats, utils\"                                                                                                                                                                                                                                     #> MASS           \"methods\"                                                                                                                                                                                                                                                                     #> Matrix         \"graphics, grid, lattice, stats, utils\"                                                                                                                                                                                                                                       #> methods        \"utils, stats\"                                                                                                                                                                                                                                                                #> mgcv           \"methods, stats, graphics, Matrix, splines, utils\"                                                                                                                                                                                                                            #> nlme           \"graphics, stats, utils, lattice\"                                                                                                                                                                                                                                             #> nnet           NA                                                                                                                                                                                                                                                                            #> parallel       \"tools, compiler\"                                                                                                                                                                                                                                                             #> rpart          NA                                                                                                                                                                                                                                                                            #> spatial        NA                                                                                                                                                                                                                                                                            #> splines        \"graphics, stats\"                                                                                                                                                                                                                                                             #> stats          \"utils, grDevices, graphics\"                                                                                                                                                                                                                                                  #> stats4         \"graphics, methods, stats\"                                                                                                                                                                                                                                                    #> survival       \"graphics, Matrix, methods, splines, stats, utils\"                                                                                                                                                                                                                            #> tcltk          \"utils\"                                                                                                                                                                                                                                                                       #> tools          NA                                                                                                                                                                                                                                                                            #> utils          NA                                                                                                                                                                                                                                                                            #>                LinkingTo                                  #> askpass        NA                                         #> backports      NA                                         #> base64enc      NA                                         #> brio           NA                                         #> bslib          NA                                         #> cachem         NA                                         #> callr          NA                                         #> cli            NA                                         #> crayon         NA                                         #> curl           NA                                         #> cyclocomp      NA                                         #> desc           NA                                         #> diffobj        NA                                         #> digest         NA                                         #> downlit        NA                                         #> ellipsis       NA                                         #> evaluate       NA                                         #> fansi          NA                                         #> fastmap        NA                                         #> fontawesome    NA                                         #> fs             NA                                         #> glue           NA                                         #> highr          NA                                         #> htmltools      NA                                         #> httr           NA                                         #> jquerylib      NA                                         #> jsonlite       NA                                         #> knitr          NA                                         #> lazyeval       NA                                         #> lifecycle      NA                                         #> lintr          NA                                         #> lmtest         NA                                         #> magrittr       NA                                         #> memoise        NA                                         #> microbenchmark NA                                         #> mime           NA                                         #> openssl        NA                                         #> pillar         NA                                         #> pkgbuild       NA                                         #> pkgconfig      NA                                         #> pkgdown        NA                                         #> pkgload        NA                                         #> praise         NA                                         #> prettyunits    NA                                         #> processx       NA                                         #> ps             NA                                         #> purrr          \"cli\"                                      #> R6             NA                                         #> ragg           \"systemfonts, textshaping\"                 #> rappdirs       NA                                         #> rcmdcheck      NA                                         #> Rcpp           NA                                         #> RcppArmadillo  \"Rcpp\"                                     #> rematch2       NA                                         #> remotes        NA                                         #> rex            NA                                         #> rlang          NA                                         #> rmarkdown      NA                                         #> rprojroot      NA                                         #> sandwich       NA                                         #> sass           NA                                         #> sessioninfo    NA                                         #> simAutoReg     \"Rcpp, RcppArmadillo\"                      #> stringi        NA                                         #> stringr        NA                                         #> strucchange    NA                                         #> sys            NA                                         #> systemfonts    \"cpp11 (>= 0.2.1)\"                         #> testthat       NA                                         #> textshaping    \"cpp11 (>= 0.2.1), systemfonts (>= 1.0.0)\" #> tibble         NA                                         #> tinytex        NA                                         #> urca           NA                                         #> utf8           NA                                         #> vars           NA                                         #> vctrs          NA                                         #> waldo          NA                                         #> whisker        NA                                         #> withr          NA                                         #> xfun           NA                                         #> xml2           NA                                         #> xmlparsedata   NA                                         #> xopen          NA                                         #> yaml           NA                                         #> zoo            NA                                         #> pak            NA                                         #> base           NA                                         #> boot           NA                                         #> class          NA                                         #> cluster        NA                                         #> codetools      NA                                         #> compiler       NA                                         #> datasets       NA                                         #> foreign        NA                                         #> graphics       NA                                         #> grDevices      NA                                         #> grid           NA                                         #> KernSmooth     NA                                         #> lattice        NA                                         #> MASS           NA                                         #> Matrix         NA                                         #> methods        NA                                         #> mgcv           NA                                         #> nlme           NA                                         #> nnet           NA                                         #> parallel       NA                                         #> rpart          NA                                         #> spatial        NA                                         #> splines        NA                                         #> stats          NA                                         #> stats4         NA                                         #> survival       NA                                         #> tcltk          NA                                         #> tools          NA                                         #> utils          NA                                         #>                Suggests                                                                                                                                                                                                                                                                                                                                                                         #> askpass        \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> backports      NA                                                                                                                                                                                                                                                                                                                                                                               #> base64enc      NA                                                                                                                                                                                                                                                                                                                                                                               #> brio           \"covr, testthat (>= 2.1.0)\"                                                                                                                                                                                                                                                                                                                                                      #> bslib          \"bsicons, curl, fontawesome, ggplot2, knitr, magrittr,\\nrappdirs, rmarkdown (>= 2.7), shiny (>= 1.6.0), testthat,\\nthematic, withr\"                                                                                                                                                                                                                                              #> cachem         \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> callr          \"asciicast, cli (>= 1.1.0), covr, mockery, ps, rprojroot,\\nspelling, testthat (>= 3.0.0), withr (>= 2.3.0)\"                                                                                                                                                                                                                                                                      #> cli            \"callr, covr, crayon, digest, glue (>= 1.6.0), grDevices,\\nhtmltools, htmlwidgets, knitr, methods, mockery, processx, ps\\n(>= 1.3.4.9000), rlang (>= 1.0.2.9003), rmarkdown, rprojroot,\\nrstudioapi, testthat, tibble, whoami, withr\"                                                                                                                                            #> crayon         \"mockery, rstudioapi, testthat, withr\"                                                                                                                                                                                                                                                                                                                                           #> curl           \"spelling, testthat (>= 1.0.0), knitr, jsonlite, rmarkdown,\\nmagrittr, httpuv (>= 1.4.4), webutils\"                                                                                                                                                                                                                                                                              #> cyclocomp      \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> desc           \"callr, covr, gh, spelling, testthat, whoami, withr\"                                                                                                                                                                                                                                                                                                                             #> diffobj        \"knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                               #> digest         \"tinytest, simplermarkdown\"                                                                                                                                                                                                                                                                                                                                                      #> downlit        \"covr, htmltools, jsonlite, MASS, MassSpecWavelet, pkgload,\\nrmarkdown, testthat (>= 3.0.0), xml2\"                                                                                                                                                                                                                                                                               #> ellipsis       \"covr, testthat\"                                                                                                                                                                                                                                                                                                                                                                 #> evaluate       \"covr, ggplot2, lattice, rlang, testthat (>= 3.0.0), withr\"                                                                                                                                                                                                                                                                                                                      #> fansi          \"unitizer, knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                     #> fastmap        \"testthat (>= 2.1.1)\"                                                                                                                                                                                                                                                                                                                                                            #> fontawesome    \"covr, dplyr (>= 1.0.8), knitr (>= 1.31), testthat (>= 3.0.0),\\nrsvg\"                                                                                                                                                                                                                                                                                                            #> fs             \"covr, crayon, knitr, pillar (>= 1.0.0), rmarkdown, spelling,\\ntestthat (>= 3.0.0), tibble (>= 1.1.0), vctrs (>= 0.3.0), withr\"                                                                                                                                                                                                                                                  #> glue           \"covr, crayon, DBI, dplyr, forcats, ggplot2, knitr, magrittr,\\nmicrobenchmark, R.utils, rmarkdown, rprintf, RSQLite, stringr,\\ntestthat (>= 3.0.0), vctrs (>= 0.3.0), waldo (>= 0.3.0), withr\"                                                                                                                                                                                   #> highr          \"knitr, markdown, testit\"                                                                                                                                                                                                                                                                                                                                                        #> htmltools      \"markdown, testthat, withr, Cairo, ragg, shiny\"                                                                                                                                                                                                                                                                                                                                  #> httr           \"covr, httpuv, jpeg, knitr, png, readr, rmarkdown, testthat\\n(>= 0.8.0), xml2\"                                                                                                                                                                                                                                                                                                   #> jquerylib      \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> jsonlite       \"httr, vctrs, testthat, knitr, rmarkdown, R.rsp, sf\"                                                                                                                                                                                                                                                                                                                             #> knitr          \"bslib, codetools, DBI (>= 0.4-1), digest, formatR, gifski,\\ngridSVG, htmlwidgets (>= 0.7), curl, jpeg, JuliaCall (>=\\n0.11.1), magick, markdown (>= 1.3), png, ragg, reticulate (>=\\n1.4), rgl (>= 0.95.1201), rlang, rmarkdown, sass, showtext,\\nstyler (>= 1.2.0), targets (>= 0.6.0), testit, tibble,\\ntikzDevice (>= 0.10), tinytex, webshot, rstudioapi, xml2 (>=\\n1.2.0)\" #> lazyeval       \"knitr, rmarkdown (>= 0.2.65), testthat, covr\"                                                                                                                                                                                                                                                                                                                                   #> lifecycle      \"covr, crayon, knitr, lintr, rmarkdown, testthat (>= 3.0.1),\\ntibble, tidyverse, tools, vctrs, withr\"                                                                                                                                                                                                                                                                            #> lintr          \"bookdown, crayon, httr (>= 1.2.1), jsonlite, mockery,\\npatrick, rlang, rmarkdown, rstudioapi (>= 0.2), testthat (>=\\n3.1.5), tibble, tufte, withr (>= 2.5.0)\"                                                                                                                                                                                                                   #> lmtest         \"car, strucchange, sandwich, dynlm, stats4, survival, AER\"                                                                                                                                                                                                                                                                                                                       #> magrittr       \"covr, knitr, rlang, rmarkdown, testthat\"                                                                                                                                                                                                                                                                                                                                        #> memoise        \"digest, aws.s3, covr, googleAuthR, googleCloudStorageR, httr,\\ntestthat\"                                                                                                                                                                                                                                                                                                        #> microbenchmark \"ggplot2, multcomp, RUnit\"                                                                                                                                                                                                                                                                                                                                                       #> mime           NA                                                                                                                                                                                                                                                                                                                                                                               #> openssl        \"curl, testthat (>= 2.1.0), digest, knitr, rmarkdown,\\njsonlite, jose, sodium\"                                                                                                                                                                                                                                                                                                   #> pillar         \"bit64, DBI, debugme, DiagrammeR, dplyr, formattable, ggplot2,\\nknitr, lubridate, nanotime, nycflights13, palmerpenguins,\\nrmarkdown, scales, stringi, survival, testthat (>= 3.1.1),\\ntibble, units (>= 0.7.2), vdiffr, withr\"                                                                                                                                                  #> pkgbuild       \"covr, cpp11, knitr, mockery, Rcpp, rmarkdown, testthat (>=\\n3.0.0), withr (>= 2.3.0)\"                                                                                                                                                                                                                                                                                           #> pkgconfig      \"covr, testthat, disposables (>= 1.0.3)\"                                                                                                                                                                                                                                                                                                                                         #> pkgdown        \"covr, diffviewer, evaluate, htmltools, htmlwidgets, knitr,\\nlifecycle, methods, openssl, pkgload (>= 1.0.2), rsconnect,\\nrstudioapi, rticles, sass, testthat (>= 3.1.3), tools\"                                                                                                                                                                                                 #> pkgload        \"bitops, covr, mathjaxr, mockr, pak, pkgbuild, Rcpp, remotes,\\nrstudioapi, testthat (>= 3.1.0)\"                                                                                                                                                                                                                                                                                  #> praise         \"testthat\"                                                                                                                                                                                                                                                                                                                                                                       #> prettyunits    \"codetools, covr, testthat\"                                                                                                                                                                                                                                                                                                                                                      #> processx       \"callr (>= 3.7.3), cli (>= 3.3.0), codetools, covr, curl,\\ndebugme, parallel, rlang (>= 1.0.2), testthat (>= 3.0.0),\\nwebfakes, withr\"                                                                                                                                                                                                                                           #> ps             \"callr, covr, curl, pillar, pingr, processx (>= 3.1.0), R6,\\nrlang, testthat (>= 3.0.0), webfakes\"                                                                                                                                                                                                                                                                               #> purrr          \"covr, dplyr (>= 0.7.8), httr, knitr, lubridate, rmarkdown,\\ntestthat (>= 3.0.0), tibble, tidyselect\"                                                                                                                                                                                                                                                                            #> R6             \"testthat, pryr\"                                                                                                                                                                                                                                                                                                                                                                 #> ragg           \"covr, graphics, grid, testthat\"                                                                                                                                                                                                                                                                                                                                                 #> rappdirs       \"roxygen2, testthat (>= 3.0.0), covr, withr\"                                                                                                                                                                                                                                                                                                                                     #> rcmdcheck      \"covr, knitr, mockery, processx, ps, rmarkdown, svglite,\\ntestthat, webfakes\"                                                                                                                                                                                                                                                                                                    #> Rcpp           \"tinytest, inline, rbenchmark, pkgKitten (>= 0.1.2)\"                                                                                                                                                                                                                                                                                                                             #> RcppArmadillo  \"tinytest, Matrix (>= 1.3.0), pkgKitten, reticulate, slam\"                                                                                                                                                                                                                                                                                                                       #> rematch2       \"covr, testthat\"                                                                                                                                                                                                                                                                                                                                                                 #> remotes        \"brew, callr, codetools, curl, covr, git2r (>= 0.23.0), knitr,\\nmockery, pkgbuild (>= 1.0.1), pingr, rmarkdown, rprojroot,\\ntestthat, webfakes, withr\"                                                                                                                                                                                                                           #> rex            \"covr, dplyr, ggplot2, Hmisc, knitr, magrittr, rmarkdown,\\nroxygen2, rvest, stringr, testthat\"                                                                                                                                                                                                                                                                                   #> rlang          \"cli (>= 3.1.0), covr, crayon, fs, glue, knitr, magrittr,\\nmethods, pillar, rmarkdown, stats, testthat (>= 3.0.0), tibble,\\nusethis, vctrs (>= 0.2.3), withr\"                                                                                                                                                                                                                    #> rmarkdown      \"digest, dygraphs, fs, rsconnect, downlit (>= 0.4.0), katex\\n(>= 1.4.0), sass (>= 0.4.0), shiny (>= 1.6.0), testthat (>=\\n3.0.3), tibble, vctrs, cleanrmd, withr (>= 2.4.2)\"                                                                                                                                                                                                     #> rprojroot      \"covr, knitr, lifecycle, mockr, rmarkdown, testthat (>=\\n3.0.0), withr\"                                                                                                                                                                                                                                                                                                          #> sandwich       \"AER, car, geepack, lattice, lme4, lmtest, MASS, multiwayvcov,\\nparallel, pcse, plm, pscl, scatterplot3d, stats4, strucchange,\\nsurvival\"                                                                                                                                                                                                                                        #> sass           \"testthat, knitr, rmarkdown, withr, shiny, curl\"                                                                                                                                                                                                                                                                                                                                 #> sessioninfo    \"callr, covr, mockery, reticulate, rmarkdown, testthat, withr\"                                                                                                                                                                                                                                                                                                                   #> simAutoReg     \"knitr, rmarkdown, testthat, microbenchmark\"                                                                                                                                                                                                                                                                                                                                     #> stringi        NA                                                                                                                                                                                                                                                                                                                                                                               #> stringr        \"covr, htmltools, htmlwidgets, knitr, rmarkdown, testthat (>=\\n3.0.0)\"                                                                                                                                                                                                                                                                                                           #> strucchange    \"stats4, car, dynlm, e1071, foreach, lmtest, mvtnorm, tseries\"                                                                                                                                                                                                                                                                                                                   #> sys            \"unix (>= 1.4), spelling, testthat\"                                                                                                                                                                                                                                                                                                                                              #> systemfonts    \"testthat (>= 2.1.0), covr, knitr, rmarkdown, tools\"                                                                                                                                                                                                                                                                                                                             #> testthat       \"covr, curl (>= 0.9.5), diffviewer (>= 0.1.0), knitr,\\nrmarkdown, rstudioapi, shiny, usethis, vctrs (>= 0.1.0), xml2\"                                                                                                                                                                                                                                                            #> textshaping    \"covr, knitr, rmarkdown\"                                                                                                                                                                                                                                                                                                                                                         #> tibble         \"bench, bit64, blob, brio, callr, cli, covr, crayon (>=\\n1.3.4), DiagrammeR, dplyr, evaluate, formattable, ggplot2,\\nhere, hms, htmltools, knitr, lubridate, mockr, nycflights13,\\npkgbuild, pkgload, purrr, rmarkdown, stringi, testthat (>=\\n3.0.2), tidyr, withr\"                                                                                                             #> tinytex        \"testit, rstudioapi\"                                                                                                                                                                                                                                                                                                                                                             #> urca           NA                                                                                                                                                                                                                                                                                                                                                                               #> utf8           \"cli, covr, knitr, rlang, rmarkdown, testthat (>= 3.0.0),\\nwithr\"                                                                                                                                                                                                                                                                                                                #> vars           NA                                                                                                                                                                                                                                                                                                                                                                               #> vctrs          \"bit64, covr, crayon, dplyr (>= 0.8.5), generics, knitr,\\npillar (>= 1.4.4), pkgdown (>= 2.0.1), rmarkdown, testthat (>=\\n3.0.0), tibble (>= 3.1.3), waldo (>= 0.2.0), withr, xml2,\\nzeallot\"                                                                                                                                                                                    #> waldo          \"covr, R6, testthat (>= 3.0.0), withr, xml2\"                                                                                                                                                                                                                                                                                                                                     #> whisker        \"markdown\"                                                                                                                                                                                                                                                                                                                                                                       #> withr          \"callr, covr, DBI, knitr, lattice, methods, rlang, rmarkdown\\n(>= 2.12), RSQLite, testthat (>= 3.0.0)\"                                                                                                                                                                                                                                                                           #> xfun           \"testit, parallel, codetools, rstudioapi, tinytex (>= 0.30),\\nmime, markdown (>= 1.5), knitr (>= 1.42), htmltools, remotes,\\npak, rhub, renv, curl, jsonlite, magick, yaml, rmarkdown\"                                                                                                                                                                                           #> xml2           \"covr, curl, httr, knitr, magrittr, mockery, rmarkdown,\\ntestthat (>= 2.1.0)\"                                                                                                                                                                                                                                                                                                    #> xmlparsedata   \"covr, testthat, xml2\"                                                                                                                                                                                                                                                                                                                                                           #> xopen          \"ps, testthat\"                                                                                                                                                                                                                                                                                                                                                                   #> yaml           \"RUnit\"                                                                                                                                                                                                                                                                                                                                                                          #> zoo            \"AER, coda, chron, ggplot2 (>= 3.0.0), mondate, scales,\\nstinepack, strucchange, timeDate, timeSeries, tis, tseries, xts\"                                                                                                                                                                                                                                                        #> pak            \"callr (>= 3.7.0),\\ncli (>= 3.2.0),\\ncovr,\\ncurl (>= 4.3.2),\\ndesc (>= 1.4.1),\\ndigest,\\ndistro,\\nfilelock (>= 1.0.2),\\ngitcreds,\\nglue (>= 1.6.2),\\nmockery,\\npingr,\\njsonlite (>= 1.8.0),\\npkgcache (>= 2.0.4),\\npkgdepends (>= 0.4.0),\\npkgsearch (>= 3.1.0),\\nprettyunits,\\nprocessx (>= 3.8.1),\\nps (>= 1.6.0),\\nrprojroot (>= 2.0.2),\\nrstudioapi,\\ntestthat,\\nwithr\"      #> base           \"methods\"                                                                                                                                                                                                                                                                                                                                                                        #> boot           \"MASS, survival\"                                                                                                                                                                                                                                                                                                                                                                 #> class          NA                                                                                                                                                                                                                                                                                                                                                                               #> cluster        \"MASS, Matrix\"                                                                                                                                                                                                                                                                                                                                                                   #> codetools      NA                                                                                                                                                                                                                                                                                                                                                                               #> compiler       NA                                                                                                                                                                                                                                                                                                                                                                               #> datasets       NA                                                                                                                                                                                                                                                                                                                                                                               #> foreign        NA                                                                                                                                                                                                                                                                                                                                                                               #> graphics       NA                                                                                                                                                                                                                                                                                                                                                                               #> grDevices      \"KernSmooth\"                                                                                                                                                                                                                                                                                                                                                                     #> grid           NA                                                                                                                                                                                                                                                                                                                                                                               #> KernSmooth     \"MASS, carData\"                                                                                                                                                                                                                                                                                                                                                                  #> lattice        \"KernSmooth, MASS, latticeExtra, colorspace\"                                                                                                                                                                                                                                                                                                                                     #> MASS           \"lattice, nlme, nnet, survival\"                                                                                                                                                                                                                                                                                                                                                  #> Matrix         \"MASS, expm\"                                                                                                                                                                                                                                                                                                                                                                     #> methods        \"codetools\"                                                                                                                                                                                                                                                                                                                                                                      #> mgcv           \"parallel, survival, MASS\"                                                                                                                                                                                                                                                                                                                                                       #> nlme           \"Hmisc, MASS, SASmixed\"                                                                                                                                                                                                                                                                                                                                                          #> nnet           \"MASS\"                                                                                                                                                                                                                                                                                                                                                                           #> parallel       \"methods\"                                                                                                                                                                                                                                                                                                                                                                        #> rpart          \"survival\"                                                                                                                                                                                                                                                                                                                                                                       #> spatial        \"MASS\"                                                                                                                                                                                                                                                                                                                                                                           #> splines        \"Matrix, methods\"                                                                                                                                                                                                                                                                                                                                                                #> stats          \"MASS, Matrix, SuppDists, methods, stats4\"                                                                                                                                                                                                                                                                                                                                       #> stats4         NA                                                                                                                                                                                                                                                                                                                                                                               #> survival       NA                                                                                                                                                                                                                                                                                                                                                                               #> tcltk          NA                                                                                                                                                                                                                                                                                                                                                                               #> tools          \"codetools, methods, xml2, curl, commonmark, knitr, xfun,\\nmathjaxr, V8\"                                                                                                                                                                                                                                                                                                         #> utils          \"methods, xml2, commonmark, knitr\"                                                                                                                                                                                                                                                                                                                                               #>                Enhances                                                              #> askpass        NA                                                                    #> backports      NA                                                                    #> base64enc      \"png\"                                                                 #> brio           NA                                                                    #> bslib          NA                                                                    #> cachem         NA                                                                    #> callr          NA                                                                    #> cli            NA                                                                    #> crayon         NA                                                                    #> curl           NA                                                                    #> cyclocomp      NA                                                                    #> desc           NA                                                                    #> diffobj        NA                                                                    #> digest         NA                                                                    #> downlit        NA                                                                    #> ellipsis       NA                                                                    #> evaluate       NA                                                                    #> fansi          NA                                                                    #> fastmap        NA                                                                    #> fontawesome    NA                                                                    #> fs             NA                                                                    #> glue           NA                                                                    #> highr          NA                                                                    #> htmltools      \"knitr\"                                                               #> httr           NA                                                                    #> jquerylib      NA                                                                    #> jsonlite       NA                                                                    #> knitr          NA                                                                    #> lazyeval       NA                                                                    #> lifecycle      NA                                                                    #> lintr          \"data.table\"                                                          #> lmtest         NA                                                                    #> magrittr       NA                                                                    #> memoise        NA                                                                    #> microbenchmark NA                                                                    #> mime           NA                                                                    #> openssl        NA                                                                    #> pillar         NA                                                                    #> pkgbuild       NA                                                                    #> pkgconfig      NA                                                                    #> pkgdown        NA                                                                    #> pkgload        NA                                                                    #> praise         NA                                                                    #> prettyunits    NA                                                                    #> processx       NA                                                                    #> ps             NA                                                                    #> purrr          NA                                                                    #> R6             NA                                                                    #> ragg           NA                                                                    #> rappdirs       NA                                                                    #> rcmdcheck      NA                                                                    #> Rcpp           NA                                                                    #> RcppArmadillo  NA                                                                    #> rematch2       NA                                                                    #> remotes        NA                                                                    #> rex            NA                                                                    #> rlang          \"winch\"                                                               #> rmarkdown      NA                                                                    #> rprojroot      NA                                                                    #> sandwich       NA                                                                    #> sass           NA                                                                    #> sessioninfo    NA                                                                    #> simAutoReg     NA                                                                    #> stringi        NA                                                                    #> stringr        NA                                                                    #> strucchange    NA                                                                    #> sys            NA                                                                    #> systemfonts    NA                                                                    #> testthat       NA                                                                    #> textshaping    NA                                                                    #> tibble         NA                                                                    #> tinytex        NA                                                                    #> urca           NA                                                                    #> utf8           NA                                                                    #> vars           NA                                                                    #> vctrs          NA                                                                    #> waldo          NA                                                                    #> whisker        NA                                                                    #> withr          NA                                                                    #> xfun           NA                                                                    #> xml2           NA                                                                    #> xmlparsedata   NA                                                                    #> xopen          NA                                                                    #> yaml           NA                                                                    #> zoo            NA                                                                    #> pak            NA                                                                    #> base           NA                                                                    #> boot           NA                                                                    #> class          NA                                                                    #> cluster        NA                                                                    #> codetools      NA                                                                    #> compiler       NA                                                                    #> datasets       NA                                                                    #> foreign        NA                                                                    #> graphics       NA                                                                    #> grDevices      NA                                                                    #> grid           NA                                                                    #> KernSmooth     NA                                                                    #> lattice        \"chron\"                                                               #> MASS           NA                                                                    #> Matrix         \"MatrixModels, SparseM, graph, igraph, maptools, sfsmisc, sp,\\nspdep\" #> methods        NA                                                                    #> mgcv           NA                                                                    #> nlme           NA                                                                    #> nnet           NA                                                                    #> parallel       \"snow, Rmpi\"                                                          #> rpart          NA                                                                    #> spatial        NA                                                                    #> splines        NA                                                                    #> stats          NA                                                                    #> stats4         NA                                                                    #> survival       NA                                                                    #> tcltk          NA                                                                    #> tools          NA                                                                    #> utils          NA                                                                    #>                License                                  License_is_FOSS #> askpass        \"MIT + file LICENSE\"                     NA              #> backports      \"GPL-2 | GPL-3\"                          NA              #> base64enc      \"GPL-2 | GPL-3\"                          NA              #> brio           \"MIT + file LICENSE\"                     NA              #> bslib          \"MIT + file LICENSE\"                     NA              #> cachem         \"MIT + file LICENSE\"                     NA              #> callr          \"MIT + file LICENSE\"                     NA              #> cli            \"MIT + file LICENSE\"                     NA              #> crayon         \"MIT + file LICENSE\"                     NA              #> curl           \"MIT + file LICENSE\"                     NA              #> cyclocomp      \"MIT + file LICENSE\"                     NA              #> desc           \"MIT + file LICENSE\"                     NA              #> diffobj        \"GPL-2 | GPL-3\"                          NA              #> digest         \"GPL (>= 2)\"                             NA              #> downlit        \"MIT + file LICENSE\"                     NA              #> ellipsis       \"MIT + file LICENSE\"                     NA              #> evaluate       \"MIT + file LICENSE\"                     NA              #> fansi          \"GPL-2 | GPL-3\"                          NA              #> fastmap        \"MIT + file LICENSE\"                     NA              #> fontawesome    \"MIT + file LICENSE\"                     NA              #> fs             \"MIT + file LICENSE\"                     NA              #> glue           \"MIT + file LICENSE\"                     NA              #> highr          \"GPL\"                                    NA              #> htmltools      \"GPL (>= 2)\"                             NA              #> httr           \"MIT + file LICENSE\"                     NA              #> jquerylib      \"MIT + file LICENSE\"                     NA              #> jsonlite       \"MIT + file LICENSE\"                     NA              #> knitr          \"GPL\"                                    NA              #> lazyeval       \"GPL-3\"                                  NA              #> lifecycle      \"MIT + file LICENSE\"                     NA              #> lintr          \"MIT + file LICENSE\"                     NA              #> lmtest         \"GPL-2 | GPL-3\"                          NA              #> magrittr       \"MIT + file LICENSE\"                     NA              #> memoise        \"MIT + file LICENSE\"                     NA              #> microbenchmark \"BSD_2_clause + file LICENSE\"            NA              #> mime           \"GPL\"                                    NA              #> openssl        \"MIT + file LICENSE\"                     NA              #> pillar         \"MIT + file LICENSE\"                     NA              #> pkgbuild       \"MIT + file LICENSE\"                     NA              #> pkgconfig      \"MIT + file LICENSE\"                     NA              #> pkgdown        \"MIT + file LICENSE\"                     NA              #> pkgload        \"GPL-3\"                                  NA              #> praise         \"MIT + file LICENSE\"                     NA              #> prettyunits    \"MIT + file LICENSE\"                     NA              #> processx       \"MIT + file LICENSE\"                     NA              #> ps             \"MIT + file LICENSE\"                     NA              #> purrr          \"MIT + file LICENSE\"                     NA              #> R6             \"MIT + file LICENSE\"                     NA              #> ragg           \"MIT + file LICENSE\"                     NA              #> rappdirs       \"MIT + file LICENSE\"                     NA              #> rcmdcheck      \"MIT + file LICENSE\"                     NA              #> Rcpp           \"GPL (>= 2)\"                             NA              #> RcppArmadillo  \"GPL (>= 2)\"                             NA              #> rematch2       \"MIT + file LICENSE\"                     NA              #> remotes        \"MIT + file LICENSE\"                     NA              #> rex            \"MIT + file LICENSE\"                     NA              #> rlang          \"MIT + file LICENSE\"                     NA              #> rmarkdown      \"GPL-3\"                                  NA              #> rprojroot      \"MIT + file LICENSE\"                     NA              #> sandwich       \"GPL-2 | GPL-3\"                          NA              #> sass           \"MIT + file LICENSE\"                     NA              #> sessioninfo    \"GPL-2\"                                  NA              #> simAutoReg     \"GPL (>= 3)\"                             NA              #> stringi        \"file LICENSE\"                           \"yes\"           #> stringr        \"MIT + file LICENSE\"                     NA              #> strucchange    \"GPL-2 | GPL-3\"                          NA              #> sys            \"MIT + file LICENSE\"                     NA              #> systemfonts    \"MIT + file LICENSE\"                     NA              #> testthat       \"MIT + file LICENSE\"                     NA              #> textshaping    \"MIT + file LICENSE\"                     NA              #> tibble         \"MIT + file LICENSE\"                     NA              #> tinytex        \"MIT + file LICENSE\"                     NA              #> urca           \"GPL (>= 2)\"                             NA              #> utf8           \"Apache License (== 2.0) | file LICENSE\" NA              #> vars           \"GPL (>= 2)\"                             NA              #> vctrs          \"MIT + file LICENSE\"                     NA              #> waldo          \"MIT + file LICENSE\"                     NA              #> whisker        \"GPL-3\"                                  NA              #> withr          \"MIT + file LICENSE\"                     NA              #> xfun           \"MIT + file LICENSE\"                     NA              #> xml2           \"MIT + file LICENSE\"                     NA              #> xmlparsedata   \"MIT + file LICENSE\"                     NA              #> xopen          \"MIT + file LICENSE\"                     NA              #> yaml           \"BSD_3_clause + file LICENSE\"            NA              #> zoo            \"GPL-2 | GPL-3\"                          NA              #> pak            \"GPL-3\"                                  NA              #> base           \"Part of R 4.3.1\"                        NA              #> boot           \"Unlimited\"                              NA              #> class          \"GPL-2 | GPL-3\"                          NA              #> cluster        \"GPL (>= 2)\"                             NA              #> codetools      \"GPL\"                                    NA              #> compiler       \"Part of R 4.3.1\"                        NA              #> datasets       \"Part of R 4.3.1\"                        NA              #> foreign        \"GPL (>= 2)\"                             NA              #> graphics       \"Part of R 4.3.1\"                        NA              #> grDevices      \"Part of R 4.3.1\"                        NA              #> grid           \"Part of R 4.3.1\"                        NA              #> KernSmooth     \"Unlimited\"                              NA              #> lattice        \"GPL (>= 2)\"                             NA              #> MASS           \"GPL-2 | GPL-3\"                          NA              #> Matrix         \"GPL (>= 2) | file LICENCE\"              NA              #> methods        \"Part of R 4.3.1\"                        NA              #> mgcv           \"GPL (>= 2)\"                             NA              #> nlme           \"GPL (>= 2)\"                             NA              #> nnet           \"GPL-2 | GPL-3\"                          NA              #> parallel       \"Part of R 4.3.1\"                        NA              #> rpart          \"GPL-2 | GPL-3\"                          NA              #> spatial        \"GPL-2 | GPL-3\"                          NA              #> splines        \"Part of R 4.3.1\"                        NA              #> stats          \"Part of R 4.3.1\"                        NA              #> stats4         \"Part of R 4.3.1\"                        NA              #> survival       \"LGPL (>= 2)\"                            NA              #> tcltk          \"Part of R 4.3.1\"                        NA              #> tools          \"Part of R 4.3.1\"                        NA              #> utils          \"Part of R 4.3.1\"                        NA              #>                License_restricts_use OS_type MD5sum NeedsCompilation Built   #> askpass        NA                    NA      NA     \"yes\"            \"4.3.0\" #> backports      NA                    NA      NA     \"yes\"            \"4.3.0\" #> base64enc      NA                    NA      NA     \"yes\"            \"4.3.0\" #> brio           NA                    NA      NA     \"yes\"            \"4.3.0\" #> bslib          NA                    NA      NA     \"no\"             \"4.3.0\" #> cachem         NA                    NA      NA     \"yes\"            \"4.3.0\" #> callr          NA                    NA      NA     \"no\"             \"4.3.0\" #> cli            NA                    NA      NA     \"yes\"            \"4.3.0\" #> crayon         NA                    NA      NA     \"no\"             \"4.3.0\" #> curl           NA                    NA      NA     \"yes\"            \"4.3.0\" #> cyclocomp      NA                    NA      NA     \"no\"             \"4.3.0\" #> desc           NA                    NA      NA     \"no\"             \"4.3.0\" #> diffobj        NA                    NA      NA     \"yes\"            \"4.3.0\" #> digest         NA                    NA      NA     \"yes\"            \"4.3.0\" #> downlit        NA                    NA      NA     \"no\"             \"4.3.0\" #> ellipsis       NA                    NA      NA     \"yes\"            \"4.3.0\" #> evaluate       NA                    NA      NA     \"no\"             \"4.3.0\" #> fansi          NA                    NA      NA     \"yes\"            \"4.3.0\" #> fastmap        NA                    NA      NA     \"yes\"            \"4.3.0\" #> fontawesome    NA                    NA      NA     \"no\"             \"4.3.0\" #> fs             NA                    NA      NA     \"yes\"            \"4.3.0\" #> glue           NA                    NA      NA     \"yes\"            \"4.3.0\" #> highr          NA                    NA      NA     \"no\"             \"4.3.0\" #> htmltools      NA                    NA      NA     \"yes\"            \"4.3.0\" #> httr           NA                    NA      NA     \"no\"             \"4.3.0\" #> jquerylib      NA                    NA      NA     \"no\"             \"4.3.0\" #> jsonlite       NA                    NA      NA     \"yes\"            \"4.3.0\" #> knitr          NA                    NA      NA     \"no\"             \"4.3.0\" #> lazyeval       NA                    NA      NA     \"yes\"            \"4.3.0\" #> lifecycle      NA                    NA      NA     \"no\"             \"4.3.0\" #> lintr          NA                    NA      NA     \"no\"             \"4.3.0\" #> lmtest         NA                    NA      NA     \"yes\"            \"4.3.0\" #> magrittr       NA                    NA      NA     \"yes\"            \"4.3.0\" #> memoise        NA                    NA      NA     \"no\"             \"4.3.0\" #> microbenchmark NA                    NA      NA     \"yes\"            \"4.3.0\" #> mime           NA                    NA      NA     \"yes\"            \"4.3.0\" #> openssl        NA                    NA      NA     \"yes\"            \"4.3.0\" #> pillar         NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgbuild       NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgconfig      NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgdown        NA                    NA      NA     \"no\"             \"4.3.0\" #> pkgload        NA                    NA      NA     \"no\"             \"4.3.0\" #> praise         NA                    NA      NA     \"no\"             \"4.3.0\" #> prettyunits    NA                    NA      NA     \"no\"             \"4.3.0\" #> processx       NA                    NA      NA     \"yes\"            \"4.3.0\" #> ps             NA                    NA      NA     \"yes\"            \"4.3.0\" #> purrr          NA                    NA      NA     \"yes\"            \"4.3.0\" #> R6             NA                    NA      NA     \"no\"             \"4.3.0\" #> ragg           NA                    NA      NA     \"yes\"            \"4.3.0\" #> rappdirs       NA                    NA      NA     \"yes\"            \"4.3.0\" #> rcmdcheck      NA                    NA      NA     \"no\"             \"4.3.0\" #> Rcpp           NA                    NA      NA     \"yes\"            \"4.3.0\" #> RcppArmadillo  NA                    NA      NA     \"yes\"            \"4.3.0\" #> rematch2       NA                    NA      NA     \"no\"             \"4.3.0\" #> remotes        NA                    NA      NA     \"no\"             \"4.3.0\" #> rex            NA                    NA      NA     \"no\"             \"4.3.0\" #> rlang          NA                    NA      NA     \"yes\"            \"4.3.0\" #> rmarkdown      NA                    NA      NA     \"no\"             \"4.3.0\" #> rprojroot      NA                    NA      NA     \"no\"             \"4.3.0\" #> sandwich       NA                    NA      NA     \"no\"             \"4.3.0\" #> sass           NA                    NA      NA     \"yes\"            \"4.3.0\" #> sessioninfo    NA                    NA      NA     \"no\"             \"4.3.0\" #> simAutoReg     NA                    NA      NA     \"yes\"            \"4.3.1\" #> stringi        NA                    NA      NA     \"yes\"            \"4.3.0\" #> stringr        NA                    NA      NA     \"no\"             \"4.3.0\" #> strucchange    NA                    NA      NA     \"yes\"            \"4.3.0\" #> sys            NA                    NA      NA     \"yes\"            \"4.3.0\" #> systemfonts    NA                    NA      NA     \"yes\"            \"4.3.0\" #> testthat       NA                    NA      NA     \"yes\"            \"4.3.0\" #> textshaping    NA                    NA      NA     \"yes\"            \"4.3.0\" #> tibble         NA                    NA      NA     \"yes\"            \"4.3.0\" #> tinytex        NA                    NA      NA     \"no\"             \"4.3.0\" #> urca           NA                    NA      NA     \"yes\"            \"4.3.0\" #> utf8           NA                    NA      NA     \"yes\"            \"4.3.0\" #> vars           NA                    NA      NA     \"no\"             \"4.3.0\" #> vctrs          NA                    NA      NA     \"yes\"            \"4.3.0\" #> waldo          NA                    NA      NA     \"no\"             \"4.3.0\" #> whisker        NA                    NA      NA     \"no\"             \"4.3.0\" #> withr          NA                    NA      NA     \"no\"             \"4.3.0\" #> xfun           NA                    NA      NA     \"yes\"            \"4.3.0\" #> xml2           NA                    NA      NA     \"yes\"            \"4.3.0\" #> xmlparsedata   NA                    NA      NA     \"no\"             \"4.3.0\" #> xopen          NA                    NA      NA     \"no\"             \"4.3.0\" #> yaml           NA                    NA      NA     \"yes\"            \"4.3.0\" #> zoo            NA                    NA      NA     \"yes\"            \"4.3.0\" #> pak            NA                    NA      NA     NA               \"4.3.0\" #> base           NA                    NA      NA     NA               \"4.3.1\" #> boot           NA                    NA      NA     \"no\"             \"4.3.1\" #> class          NA                    NA      NA     \"yes\"            \"4.3.1\" #> cluster        NA                    NA      NA     \"yes\"            \"4.3.1\" #> codetools      NA                    NA      NA     \"no\"             \"4.3.1\" #> compiler       NA                    NA      NA     NA               \"4.3.1\" #> datasets       NA                    NA      NA     NA               \"4.3.1\" #> foreign        NA                    NA      NA     \"yes\"            \"4.3.1\" #> graphics       NA                    NA      NA     \"yes\"            \"4.3.1\" #> grDevices      NA                    NA      NA     \"yes\"            \"4.3.1\" #> grid           NA                    NA      NA     \"yes\"            \"4.3.1\" #> KernSmooth     NA                    NA      NA     \"yes\"            \"4.3.1\" #> lattice        NA                    NA      NA     \"yes\"            \"4.3.1\" #> MASS           NA                    NA      NA     \"yes\"            \"4.3.1\" #> Matrix         NA                    NA      NA     \"yes\"            \"4.3.1\" #> methods        NA                    NA      NA     \"yes\"            \"4.3.1\" #> mgcv           NA                    NA      NA     \"yes\"            \"4.3.1\" #> nlme           NA                    NA      NA     \"yes\"            \"4.3.1\" #> nnet           NA                    NA      NA     \"yes\"            \"4.3.1\" #> parallel       NA                    NA      NA     \"yes\"            \"4.3.1\" #> rpart          NA                    NA      NA     \"yes\"            \"4.3.1\" #> spatial        NA                    NA      NA     \"yes\"            \"4.3.1\" #> splines        NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats          NA                    NA      NA     \"yes\"            \"4.3.1\" #> stats4         NA                    NA      NA     NA               \"4.3.1\" #> survival       NA                    NA      NA     \"yes\"            \"4.3.1\" #> tcltk          NA                    NA      NA     \"yes\"            \"4.3.1\" #> tools          NA                    NA      NA     \"yes\"            \"4.3.1\" #> utils          NA                    NA      NA     \"yes\"            \"4.3.1\""},{"path":"https://github.com/ijapesigan/simAutoReg/articles/simAutoReg.html","id":"description","dir":"Articles","previous_headings":"","what":"Description","title":"simAutoReg: Simulate Data from Autoregressive Models","text":"Simulate data autoregressive models.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/articles/simAutoReg.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"simAutoReg: Simulate Data from Autoregressive Models","text":"can install released version simAutoReg GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"ijapesigan/simAutoReg\")"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/simAutoReg.html","id":"more-information","dir":"Articles","previous_headings":"","what":"More Information","title":"simAutoReg: Simulate Data from Autoregressive Models","text":"See GitHub Pages package documentation. See Quarto Pub package wiki resources.","code":""},{"path":[]},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/articles/var.html","id":"normal","dir":"Articles","previous_headings":"Data Generation","what":"Normal","title":"simAutoReg: Vector Autoregressive Model - VAR(p)","text":"","code":"library(simAutoReg) set.seed(42) time <- 10000L burn_in <- 200 k <- 3 p <- 2 constant <- c(1, 1, 1) coef <- matrix(   data = c(     0.4, 0.0, 0.0, 0.1, 0.0, 0.0,     0.0, 0.5, 0.0, 0.0, 0.2, 0.0,     0.0, 0.0, 0.6, 0.0, 0.0, 0.3   ),   nrow = k,   byrow = TRUE ) chol_cov <- chol(   matrix(     data = c(       0.1, 0.0, 0.0,       0.0, 0.1, 0.0,       0.0, 0.0, 0.1     ),     nrow = k,     byrow = TRUE   ) ) y <- SimVAR(   time = time,   burn_in = burn_in,   constant = constant,   coef = coef,   chol_cov = chol_cov )"},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/articles/var.html","id":"fitvarols","dir":"Articles","previous_headings":"Model Fitting","what":"FitVAROLS","title":"simAutoReg: Vector Autoregressive Model - VAR(p)","text":"","code":"yx <- YX(data = y, p = p) simAutoReg:::.FitVAROLS(Y = yx$Y, X = yx$X) #>           [,1]        [,2]        [,3]         [,4]        [,5]        [,6] #> [1,] 1.0811778  0.38149582 0.014493688 -0.008235351 0.107271863 -0.01481861 #> [2,] 0.9079932 -0.01067206 0.516880335 -0.003886862 0.009852424  0.20816148 #> [3,] 1.0180537 -0.01619283 0.008703253  0.599960140 0.015098029 -0.01696596 #>             [,7] #> [1,] 0.002528288 #> [2,] 0.005060958 #> [3,] 0.301688940"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/var.html","id":"plots","dir":"Articles","previous_headings":"Model Fitting","what":"Plots","title":"simAutoReg: Vector Autoregressive Model - VAR(p)","text":"","code":"plot(x = 1:nrow(y), y = y[, 1], type = \"b\", xlab = \"time\", ylab = \"y1\") plot(x = 1:nrow(y), y = y[, 2], type = \"b\", xlab = \"time\", ylab = \"y2\") plot(x = 1:nrow(y), y = y[, 3], type = \"b\", xlab = \"time\", ylab = \"y3\") hist(y[, 1], xlab = \"y1\") hist(y[, 2], xlab = \"y2\") hist(y[, 3], xlab = \"y3\")"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/var.html","id":"zero-inflated-poisson-y1","dir":"Articles","previous_headings":"Model Fitting","what":"Zero-inflated Poisson Y1","title":"simAutoReg: Vector Autoregressive Model - VAR(p)","text":"","code":"y <- SimVARZIP(   time = time,   burn_in = burn_in,   constant = constant,   coef = coef,   chol_cov = chol_cov )"},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/articles/var.html","id":"fitvarols-1","dir":"Articles","previous_headings":"Model Fitting","what":"FitVAROLS","title":"simAutoReg: Vector Autoregressive Model - VAR(p)","text":"","code":"yx <- YX(data = y, p = p) simAutoReg:::.FitVAROLS(Y = yx$Y, X = yx$X) #>           [,1]          [,2]        [,3]       [,4]          [,5]         [,6] #> [1,] 0.1976662  0.0115907232 0.009087347 0.10811177  0.0014431850 -0.023903648 #> [2,] 0.9693473  0.0015885479 0.508317060 0.01357022 -0.0003888942  0.188067275 #> [3,] 0.9858479 -0.0004950656 0.009888306 0.62605825 -0.0006047023 -0.009607953 #>              [,7] #> [1,] -0.045984398 #> [2,] -0.009418071 #> [3,]  0.275557440"},{"path":"https://github.com/ijapesigan/simAutoReg/articles/var.html","id":"plots-1","dir":"Articles","previous_headings":"Model Fitting","what":"Plots","title":"simAutoReg: Vector Autoregressive Model - VAR(p)","text":"","code":"plot(x = 1:nrow(y), y = y[, 1], type = \"b\", xlab = \"time\", ylab = \"y1\") plot(x = 1:nrow(y), y = y[, 2], type = \"b\", xlab = \"time\", ylab = \"y2\") plot(x = 1:nrow(y), y = y[, 3], type = \"b\", xlab = \"time\", ylab = \"y3\") hist(y[, 1], xlab = \"y1\") hist(y[, 2], xlab = \"y2\") hist(y[, 3], xlab = \"y3\")"},{"path":"https://github.com/ijapesigan/simAutoReg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Ivan Jacob Agaloos Pesigan. Author, maintainer, copyright holder.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pesigan, . J. . (2023). simAutoReg: Simulate Data Autoregressive Models. R package version 0.9.1. https://github.com/ijapesigan/simAutoReg","code":"@Manual{,   author = {Ivan Jacob Agaloos Pesigan},   title = {simAutoReg: Simulate Data from Autoregressive Models},   year = {2023},   note = {R package version 0.9.1}, }"},{"path":"https://github.com/ijapesigan/simAutoReg/index.html","id":"simautoreg","dir":"","previous_headings":"","what":"Simulate Data from Autoregressive Models","title":"Simulate Data from Autoregressive Models","text":"Ivan Jacob Agaloos Pesigan 2023-08-05","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/index.html","id":"description","dir":"","previous_headings":"","what":"Description","title":"Simulate Data from Autoregressive Models","text":"Simulate data autoregressive models.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Simulate Data from Autoregressive Models","text":"can install released version simAutoReg GitHub :","code":"if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"ijapesigan/simAutoReg\")"},{"path":"https://github.com/ijapesigan/simAutoReg/index.html","id":"more-information","dir":"","previous_headings":"","what":"More Information","title":"Simulate Data from Autoregressive Models","text":"See GitHub Pages package documentation.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from an Autoregressive Model with Constant Term — SimAR","title":"Simulate Data from an Autoregressive Model with Constant Term — SimAR","text":"function generates synthetic time series data autoregressive (AR) model.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from an Autoregressive Model with Constant Term — SimAR","text":"","code":"SimAR(time, burn_in, constant, coef, sd)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from an Autoregressive Model with Constant Term — SimAR","text":"time Integer. Number time points simulate. burn_in Integer. Number burn-periods recording data. constant Numeric. constant term AR model. coef Numeric vector. Autoregressive coefficients. sd Numeric. standard deviation random process noise.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from an Autoregressive Model with Constant Term — SimAR","text":"Numeric vector (column matrix) containing simulated time series data.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from an Autoregressive Model with Constant Term — SimAR","text":"SimAR() function generates synthetic time series data autoregressive (AR) model. generated data follows AR(p) model, p number coefficients specified coef. generated time series data includes constant term autoregressive terms based provided coefficients. Random noise, sampled normal distribution mean 0 standard deviation sd, added time series. burn-period specified exclude initial data points output. steps generating autoregressive time series burn-follows: Set order AR model p based length coef. Create vector data size time + burn_in store generated AR time series data. Create vector data size time + burn_in random process noise normal distribution mean 0 standard deviation sd. Generate autoregressive time series burn-using formula: $$Y_t = constant + \\sum_{=1}^{p} (coef[] * Y_{t-}) + noise_t$$ \\(Y_t\\) time series data time \\(t\\), \\(constant\\) constant term, \\(coef[]\\) autoregressive coefficients, \\(Y_{t-}\\) lagged data points order p, \\(noise_t\\) random noise time \\(t\\). Remove burn-period generated time series data.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from an Autoregressive Model with Constant Term — SimAR","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from an Autoregressive Model with Constant Term — SimAR","text":"","code":"set.seed(42) SimAR(time = 10, burn_in = 5, constant = 2, coef = c(0.5, -0.3), sd = 0.1) #>           [,1] #>  [1,] 2.441758 #>  [2,] 2.756566 #>  [3,] 2.626824 #>  [4,] 2.890127 #>  [5,] 2.644473 #>  [6,] 2.716173 #>  [7,] 3.022073 #>  [8,] 2.418413 #>  [9,] 2.246827 #> [10,] 2.371225"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVN.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Multivariate Normal Random Numbers — SimMVN","title":"Simulate Multivariate Normal Random Numbers — SimMVN","text":"function generates multivariate normal random numbers.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVN.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Multivariate Normal Random Numbers — SimMVN","text":"","code":"SimMVN(n, location, chol_scale)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVN.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Multivariate Normal Random Numbers — SimMVN","text":"n Integer. Number samples generate. location Numeric vector. Mean vector length k, k number variables. chol_scale Numeric matrix. Cholesky decomposition covariance matrix dimensions k k.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVN.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Multivariate Normal Random Numbers — SimMVN","text":"Matrix containing simulated multivariate normal random numbers, dimensions n k, n number samples k number variables.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVN.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Multivariate Normal Random Numbers — SimMVN","text":"SimMVN() function generates multivariate normal random numbers using Cholesky decomposition method. Given number samples n, mean vector location length k (k number variables), Cholesky decomposition chol_scale covariance matrix dimensions k k, function produces matrix multivariate normal random numbers. steps involved generating multivariate normal random numbers follows: Determine number variables k length mean vector. Generate random data standard multivariate normal distribution, resulting n k matrix random numbers. Transform standard normal random data multivariate normal random data using Cholesky decomposition chol_scale. Add mean vector location transformed data obtain final simulated multivariate normal random numbers. function returns matrix simulated multivariate normal random numbers dimensions n k, n number samples k number variables. matrix can used various statistical analyses simulations.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVN.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Multivariate Normal Random Numbers — SimMVN","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVN.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Multivariate Normal Random Numbers — SimMVN","text":"","code":"set.seed(42) n <- 1000L location <- c(0.5, -0.2, 0.1) scale <- matrix(   data = c(1.0, 0.3, 0.3, 0.3, 1.0, 0.2, 0.3, 0.2, 1.0),   nrow = 3,   byrow = TRUE ) chol_scale <- chol(scale) y <- SimMVN(n = n, location = location, chol_scale = chol_scale) colMeans(y) #> [1]  0.4633877 -0.1736762  0.0825133 var(y) #>           [,1]      [,2]      [,3] #> [1,] 0.9982658 0.2944345 0.2500963 #> [2,] 0.2944345 0.9484743 0.1941391 #> [3,] 0.2500963 0.1941391 0.9322613"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVNFixed.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Multivariate Normal Random Numbers with Optional Fixed Values — SimMVNFixed","title":"Simulate Multivariate Normal Random Numbers with Optional Fixed Values — SimMVNFixed","text":"function generates multivariate normal random numbers optinal fixed values variance zero.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVNFixed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Multivariate Normal Random Numbers with Optional Fixed Values — SimMVNFixed","text":"","code":"SimMVNFixed(n, location, scale)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVNFixed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Multivariate Normal Random Numbers with Optional Fixed Values — SimMVNFixed","text":"n Integer. Number samples generate. location Numeric vector. Mean vector length k, k number variables. scale Numeric matrix. Covariance matrix dimensions k k. Values variables variance 0 fixed corresponding value location.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVNFixed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Multivariate Normal Random Numbers with Optional Fixed Values — SimMVNFixed","text":"Matrix containing simulated multivariate normal random numbers, dimensions n k, n number samples k number variables.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVNFixed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Multivariate Normal Random Numbers with Optional Fixed Values — SimMVNFixed","text":"SimMVNFixed() function first identifies indices non-constant variables (.e., variables variance equal 0) covariance matrix. extracts non-constant elements mean vector covariance matrix. Cholesky decomposition performed covariance matrix non-constant variables. Random samples generated non-constant variables using Cholesky factor. generated data matrix constructed setting non-constant variables constant variables corresponding values.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVNFixed.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Multivariate Normal Random Numbers with Optional Fixed Values — SimMVNFixed","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimMVNFixed.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Multivariate Normal Random Numbers with Optional Fixed Values — SimMVNFixed","text":"","code":"set.seed(42) n <- 1000L location <- c(0.5, -0.2, 0.1) scale <- matrix(   data = c(0, 0.3, 0.3, 0.3, 1.0, 0.2, 0.3, 0.2, 1.0),   nrow = 3,   byrow = TRUE ) y <- SimMVNFixed(n = n, location = location, scale = scale) colMeans(y) #> [1]  0.5000000 -0.2287905  0.1383187 var(y) #>      [,1]      [,2]      [,3] #> [1,]    0 0.0000000 0.0000000 #> [2,]    0 1.0340253 0.1803671 #> [3,]    0 0.1803671 0.9090013"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVAR.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"function generates synthetic time series data Vector Autoregressive (VAR) model.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVAR.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"","code":"SimVAR(time, burn_in, constant, coef, chol_cov)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVAR.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"time Integer. Number time points simulate. burn_in Integer. Number burn-observations exclude returning results. constant Numeric vector. constant term vector length k, k number variables. coef Numeric matrix. Coefficient matrix dimensions k (k * p). k k block corresponds coefficient matrix particular lag. chol_cov Numeric matrix. Cholesky decomposition covariance matrix multivariate normal noise. dimensions k k.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVAR.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"Numeric matrix containing simulated time series data dimensions k time, k number variables time number observations.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVAR.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"SimVAR() function generates synthetic time series data Vector Autoregressive (VAR) model. VAR model defined constant term constant, coefficient matrix coef, Cholesky decomposition covariance matrix multivariate normal process noise chol_cov. generated time series data follows VAR(p) process, p number lags specified size coef. generated data includes burn-period, excluded returning results. steps involved generating VAR time series data follows: Extract number variables k number lags p input. Create matrix data size k (time + burn_in) store generated VAR time series data. Set initial values matrix data using constant term constant. time point starting p-th time point time + burn_in - 1: Generate vector random noise multivariate normal distribution mean 0 covariance matrix chol_cov. Generate VAR time series values variable j time t using formula: $$Y_{tj} = constant_j +     \\sum_{l = 1}^{p} \\sum_{m = 1}^{k} (coef_{jm} * Y_{im}) +     \\text{noise}_{j}$$ \\(Y_{tj}\\) value variable j time t, \\(constant_j\\) constant term variable j, \\(coef_{jm}\\) coefficients variable j lagged variables order p, \\(Y_{tm}\\) lagged values variable m order p time t, \\(noise_{j}\\) element j generated vector random process noise. Transpose matrix data return required time period burn-period, column burn_in column time + burn_in - 1.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVAR.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVAR.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from a Vector Autoregressive (VAR) Model — SimVAR","text":"","code":"set.seed(42) time <- 50L burn_in <- 10L k <- 3 p <- 2 constant <- c(1, 1, 1) coef <- matrix(   data = c(     0.4, 0.0, 0.0, 0.1, 0.0, 0.0,     0.0, 0.5, 0.0, 0.0, 0.2, 0.0,     0.0, 0.0, 0.6, 0.0, 0.0, 0.3   ),   nrow = k,   byrow = TRUE ) chol_cov <- chol(diag(3)) y <- SimVAR(   time = time,   burn_in = burn_in,   constant = constant,   coef = coef,   chol_cov = chol_cov ) head(y) #>           [,1]     [,2]     [,3] #> [1,] 1.6604813 4.407838 7.473852 #> [2,] 0.2947893 2.772433 7.051225 #> [3,] 1.7966908 2.317002 5.759385 #> [4,] 3.2784861 3.105018 6.957684 #> [5,] 1.9508525 3.791006 7.690658 #> [6,] 0.6096591 3.407655 6.828098"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARExo.html","id":null,"dir":"Reference","previous_headings":"","what":"This function generates synthetic time series data\nfrom a Vector Autoregressive (VAR) model with exogenous variables. — SimVARExo","title":"This function generates synthetic time series data\nfrom a Vector Autoregressive (VAR) model with exogenous variables. — SimVARExo","text":"function generates synthetic time series data Vector Autoregressive (VAR) model exogenous variables.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARExo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"This function generates synthetic time series data\nfrom a Vector Autoregressive (VAR) model with exogenous variables. — SimVARExo","text":"","code":"SimVARExo(time, burn_in, constant, coef, chol_cov, exo_mat, exo_coef)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARExo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"This function generates synthetic time series data\nfrom a Vector Autoregressive (VAR) model with exogenous variables. — SimVARExo","text":"time Integer. Number time points simulate. burn_in Integer. Number burn-observations exclude returning results. constant Numeric vector. constant term vector length k, k number variables. coef Numeric matrix. Coefficient matrix dimensions k (k * p). k k block corresponds coefficient matrix particular lag. chol_cov Numeric matrix. Cholesky decomposition covariance matrix multivariate normal noise. dimensions k k. exo_mat Numeric matrix. Matrix exogenous covariates dimensions time + burn_in x. column corresponds different exogenous variable. exo_coef Numeric vector. Coefficient matrix dimensions k x associated exogenous covariates.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARExo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"This function generates synthetic time series data\nfrom a Vector Autoregressive (VAR) model with exogenous variables. — SimVARExo","text":"Numeric matrix containing simulated time series data dimensions k time, k number variables time number observations.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARExo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"This function generates synthetic time series data\nfrom a Vector Autoregressive (VAR) model with exogenous variables. — SimVARExo","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIP.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel — SimVARZIP","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel — SimVARZIP","text":"function generates synthetic time series data Vector Autoregressive Zero-Inflated Poisson (VARZIP) model.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIP.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel — SimVARZIP","text":"","code":"SimVARZIP(time, burn_in, constant, coef, chol_cov)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIP.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel — SimVARZIP","text":"time Integer. Number time points simulate. burn_in Integer. Number burn-observations exclude returning results. constant Numeric vector. constant term vector length k, k number variables. coef Numeric matrix. Coefficient matrix dimensions k (k * p). k k block corresponds coefficient matrix particular lag. chol_cov Numeric matrix. Cholesky decomposition covariance matrix multivariate normal noise. dimensions k k.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIP.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel — SimVARZIP","text":"Numeric matrix containing simulated time series data dimensions k time, k number variables time number observations.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIP.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel — SimVARZIP","text":"SimVARZIP() function generates synthetic time series data Vector Autoregressive (VAR) Zero-Inflated Poisson (ZIP) model first observed variable. See SimVAR() details generating data VAR(p). SimVARZIP function goes using generated values first variable generate data ZIP model. exponential values first variable original VAR(p) model used intensity parameter Poisson distribution ZIP model. Data ZIP model used replace original values first variable. Values rest variables unchanged. generated data includes burn-period, excluded returning results. steps involved generating time series data follows: Extract number variables k number lags p input. Create matrix data size k x (time + burn_in) store generated data. Set initial values matrix data using constant term constant. time point starting p-th time point time + burn_in - 1: Generate vector random process noise multivariate normal distribution mean 0 covariance matrix chol_cov. Generate VAR time series values variable j time t applying autoregressive terms lag lag variable l. Add generated noise VAR time series values. first variable, apply Zero-Inflated Poisson (ZIP) model: Compute intensity intensity exponential first variable's value time t. Sample random value u uniform distribution [0, 1]. u less intensity / (1 + intensity), set first variable's value zero (inflation). Otherwise, sample first variable's value Poisson distribution mean intensity (count process). Transpose data matrix data return required time period burn-numeric matrix.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIP.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel — SimVARZIP","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIP.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel — SimVARZIP","text":"","code":"set.seed(42) time <- 50L burn_in <- 10L k <- 3 p <- 2 constant <- c(1, 1, 1) coef <- matrix(   data = c(     0.4, 0.0, 0.0, 0.1, 0.0, 0.0,     0.0, 0.5, 0.0, 0.0, 0.2, 0.0,     0.0, 0.0, 0.6, 0.0, 0.0, 0.3   ),   nrow = k,   byrow = TRUE ) chol_cov <- chol(diag(3)) y <- SimVARZIP(   time = time,   burn_in = burn_in,   constant = constant,   coef = coef,   chol_cov = chol_cov ) head(y) #>      [,1]     [,2]     [,3] #> [1,]    0 6.764584 8.267509 #> [2,]    0 6.272943 9.135121 #> [3,]    0 5.122119 8.865270 #> [4,]    1 5.086065 8.045026 #> [5,]    0 3.057915 7.248725 #> [6,]    0 3.709934 5.680281"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIPExo.html","id":null,"dir":"Reference","previous_headings":"","what":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel with Exogenous Variables — SimVARZIPExo","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel with Exogenous Variables — SimVARZIPExo","text":"function generates synthetic time series data Vector Autoregressive Zero-Inflated Poisson (VARZIP) model exogenous variables.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIPExo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel with Exogenous Variables — SimVARZIPExo","text":"","code":"SimVARZIPExo(time, burn_in, constant, coef, chol_cov, exo_mat, exo_coef)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIPExo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel with Exogenous Variables — SimVARZIPExo","text":"time Integer. Number time points simulate. burn_in Integer. Number burn-observations exclude returning results. constant Numeric vector. constant term vector length k, k number variables. coef Numeric matrix. Coefficient matrix dimensions k (k * p). k k block corresponds coefficient matrix particular lag. chol_cov Numeric matrix. Cholesky decomposition covariance matrix multivariate normal noise. dimensions k k. exo_mat Numeric matrix. Matrix exogenous covariates dimensions time + burn_in x. column corresponds different exogenous variable. exo_coef Numeric vector. Coefficient matrix dimensions k x associated exogenous covariates.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIPExo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel with Exogenous Variables — SimVARZIPExo","text":"Numeric matrix containing simulated time series data dimensions k time, k number variables time number observations.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVARZIPExo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Simulate Data from a Vector Autoregressive Zero-Inflated Poisson (VARZIP)\nModel with Exogenous Variables — SimVARZIPExo","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVariance.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate Random Data for the Variance Vector — SimVariance","title":"Generate Random Data for the Variance Vector — SimVariance","text":"function generates random data variance vector given $$   \\boldsymbol{\\sigma^{2}} =   \\exp \\left( \\boldsymbol{\\mu} + \\boldsymbol{\\varepsilon} \\right)   \\quad   \\text{}   \\quad   \\boldsymbol{\\varepsilon} \\sim   \\mathcal{N} \\left( \\boldsymbol{0}, \\boldsymbol{\\Sigma} \\right) $$.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVariance.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate Random Data for the Variance Vector — SimVariance","text":"","code":"SimVariance(n, location, chol_scale)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVariance.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate Random Data for the Variance Vector — SimVariance","text":"n Integer. Number samples generate. location Numeric vector. constant term \\(\\boldsymbol{\\mu}\\). chol_scale Numeric matrix. Cholesky decomposition covariance matrix \\(\\boldsymbol{\\Sigma}\\) multivariate normal random error \\(\\boldsymbol{\\varepsilon}\\).","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVariance.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate Random Data for the Variance Vector — SimVariance","text":"Matrix row containing simulated variance vector sample.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVariance.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Generate Random Data for the Variance Vector — SimVariance","text":"SimVariance() function generates random data variance vector based exponential multivariate normal distribution. Given number samples n, constant term \\(\\boldsymbol{\\mu}\\) represented location vector, Cholesky decomposition matrix \\(\\boldsymbol{\\Sigma}\\) multivariate normal random error \\(\\boldsymbol{\\varepsilon}\\), function simulates \\(n\\) independent samples variance vector \\(\\boldsymbol{\\sigma^{2}}\\). sample variance vector \\(\\boldsymbol{\\sigma^{2}}\\) obtained calculating exponential random variations mean vector \\(\\boldsymbol{\\mu}\\). random variations generated using Cholesky decomposition covariance matrix \\(\\boldsymbol{\\Sigma}\\). Finally, function returns matrix column containing simulated variance vector sample.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVariance.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Generate Random Data for the Variance Vector — SimVariance","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/SimVariance.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate Random Data for the Variance Vector — SimVariance","text":"","code":"set.seed(42) n <- 100 location <- c(0.5, -0.2, 0.1) chol_scale <- chol(   matrix(     data = c(1.0, 0.3, 0.3, 0.3, 1.0, 0.2, 0.3, 0.2, 1.0),     nrow = 3,     byrow = TRUE   ) ) SimVariance(n = n, location = location, chol_scale = chol_scale) #>              [,1]        [,2]        [,3] #>   [1,]  0.9689893  0.82351573  1.36961352 #>   [2,]  3.7481137  1.81499146  0.81233741 #>   [3,] 15.1416573  4.63615224  2.14187062 #>   [4,]  2.2227268  1.14225080  1.70260655 #>   [5,]  2.4715825  3.28447845  1.45466449 #>   [6,]  0.8823452  1.22741603  0.33978064 #>   [7,]  4.4290116  0.91583989  2.06574245 #>   [8,]  5.9940375  5.05676091  1.46211617 #>   [9,]  1.1732917  1.28438011  0.70286904 #>  [10,]  9.6204947  2.94312273  2.84982846 #>  [11,]  1.7987375  0.54209102  0.94115054 #>  [12,]  1.5698829  0.38279819  0.35051092 #>  [13,]  1.5524481  2.48718707  2.59730589 #>  [14,]  3.3271043  0.40866984  0.89511041 #>  [15,]  0.5529926  2.12834923  0.19161626 #>  [16,] 23.0120425  1.11074074  0.99113853 #>  [17,]  0.7067468  1.24323116  0.66157195 #>  [18,]  1.6969467  2.33091320  0.14749401 #>  [19,]  1.3262444  0.35209211  0.89993770 #>  [20,]  3.6850778  1.53164445  0.80578387 #>  [21,]  1.3586498  1.54190173  0.70260479 #>  [22,]  5.6186116  1.28155759  0.64461130 #>  [23,]  3.0063061  1.47184767  1.37760380 #>  [24,]  3.6198752  0.30918139  0.83662813 #>  [25,]  0.6397306  0.70761195  0.80655415 #>  [26,]  7.8987802  0.37293136  1.32108985 #>  [27,]  3.6544051  0.64427609  2.41698687 #>  [28,]  2.0519894  0.14178351  1.38447512 #>  [29,]  0.2207307  0.39129401  0.13610495 #>  [30,]  0.5642138  0.53145093  0.31934692 #>  [31,]  1.5185833  3.57974922  1.00781674 #>  [32,]  2.8612588  0.54333536  0.66135707 #>  [33,]  3.7674575  0.09054961  4.06838051 #>  [34,]  2.2218250  0.51083586  1.94062543 #>  [35,]  2.2933200  0.73700075  0.54465019 #>  [36,]  1.7918856  0.30161099  0.06932249 #>  [37,]  0.4447227  1.74582997  0.56249779 #>  [38,]  0.4938529  0.79086626  0.67879059 #>  [39,]  1.0237050  1.38645957  0.74662500 #>  [40,]  6.2746773  2.25461583  0.62515291 #>  [41,]  2.7530984  0.42106984  0.41578020 #>  [42,]  0.6371296  0.20967427  0.24115836 #>  [43,]  0.2971539  1.09988787  0.72414107 #>  [44,]  1.8282720  1.92955459  0.53335829 #>  [45,]  7.6166056  0.66170305  0.46539698 #>  [46,]  2.4400793  0.62412445  3.02784164 #>  [47,]  2.4270720  0.50721011  0.34242874 #>  [48,]  1.1695528  1.28465700  0.16698270 #>  [49,]  0.9605867  0.75296441  0.48456075 #>  [50,]  3.5790448  0.39845628  0.82217769 #>  [51,]  3.6263696  2.48244098  1.71908646 #>  [52,]  0.5720557  1.36698688  1.73826915 #>  [53,]  0.3684204  1.38050515  0.53295428 #>  [54,]  1.4786780  0.82739885  2.80684307 #>  [55,]  0.6882503  1.88318866  2.14925220 #>  [56,]  3.1058871  0.82861316  3.20444606 #>  [57,]  1.6537055  0.26279458  0.33198102 #>  [58,]  1.4852374  0.65504308  0.76281149 #>  [59,]  2.1711740  1.45219299  8.69637685 #>  [60,]  0.5199825  0.56986826  0.62925916 #>  [61,]  0.4396344  0.23920884  0.94626920 #>  [62,]  6.4592149  0.54888735  0.23706992 #>  [63,]  7.1699227  2.21954553  4.25241740 #>  [64,]  2.3144717  6.59468288  0.89369928 #>  [65,]  1.4004988  0.65785183  0.86756368 #>  [66,]  1.2824383  0.48134160  0.44599691 #>  [67,]  0.9637559  0.58966612  2.78500997 #>  [68,]  1.2809781  2.42795847  0.70167002 #>  [69,]  2.2205710  2.22918667  2.09495226 #>  [70,]  1.9420871  0.14321625  0.82682320 #>  [71,]  0.2054686  0.48966991  0.13416580 #>  [72,]  1.9895693  2.16661524  8.79889693 #>  [73,]  6.7143693  1.20153781  8.38030409 #>  [74,]  3.2734592  0.29225407  0.99345483 #>  [75,]  2.8982618  1.01818756  1.47202279 #>  [76,]  0.4658719  0.94561749  1.05704317 #>  [77,]  0.4440750  0.32695520  0.53281105 #>  [78,]  0.9861210  1.72965862  0.04426660 #>  [79,]  4.0912222  0.62052835  2.83022618 #>  [80,]  3.9900348  0.43551633  8.30593118 #>  [81,]  1.6592747  0.54164808  5.91245631 #>  [82,]  1.5086188  0.30815644  2.58260877 #>  [83,]  2.3672157  3.69711942  1.74134710 #>  [84,]  5.0445647  0.15265370  2.31972872 #>  [85,]  8.2364658  0.66209451  0.77825987 #>  [86,]  1.2185998  0.82535415  0.24083607 #>  [87,] 13.2395275 22.50835272  1.59118788 #>  [88,] 14.5205233  0.59229273  1.46233061 #>  [89,]  2.4331951  0.75206653  1.55107045 #>  [90,]  5.1641093  0.93703887  1.04057568 #>  [91,]  0.2813798  0.48116977  0.56364833 #>  [92,]  0.5472978  1.15936672  0.71459134 #>  [93,]  7.6323727  0.76398489 17.27942581 #>  [94,] 10.7007401  0.53097771  0.72178520 #>  [95,]  7.6187583  0.24747822  0.63959292 #>  [96,]  0.7930670  0.81994263  0.24520157 #>  [97,]  0.6575776  0.24327644  1.07303089 #>  [98,]  3.5765165  1.13666503  4.44932599 #>  [99,]  3.7701862  3.18441080  4.73897361 #> [100,]  2.0381412  5.56995669  1.58624582"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YX.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Y and X Matrices — YX","title":"Create Y and X Matrices — YX","text":"function creates dependent variable (Y) predictor variable (X) matrices.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YX.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Y and X Matrices — YX","text":"","code":"YX(data, p)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YX.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Y and X Matrices — YX","text":"data Numeric matrix. time series data dimensions t k, t number observations k number variables. p Integer. order VAR model (number lags).","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YX.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Y and X Matrices — YX","text":"List containing dependent variable (Y) predictor variable (X) matrices. Note resulting matrices t - p rows.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YX.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Y and X Matrices — YX","text":"YX() function creates Y X matrices required fitting Vector Autoregressive (VAR) model. Given input data matrix dimensions t k, t number observations k number variables, order VAR model p (number lags), function constructs lagged predictor matrix X dependent variable matrix Y. steps involved creating Y X matrices follows: Determine number observations t number variables k input data matrix. Create matrices X Y store lagged variables dependent variable, respectively. Populate matrices X Y appropriate lagged data. predictors matrix X contains column ones lagged values dependent variables, dependent variable matrix Y contains original values dependent variables. function returns list containing Y X matrices, can used analysis estimation VAR model parameters.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YX.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Y and X Matrices — YX","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YX.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create Y and X Matrices — YX","text":"","code":"set.seed(42) time <- 50L burn_in <- 10L k <- 3 p <- 2 constant <- c(1, 1, 1) coef <- matrix(   data = c(     0.4, 0.0, 0.0, 0.1, 0.0, 0.0,     0.0, 0.5, 0.0, 0.0, 0.2, 0.0,     0.0, 0.0, 0.6, 0.0, 0.0, 0.3   ),   nrow = k,   byrow = TRUE ) chol_cov <- chol(diag(3)) y <- SimVAR(   time = time,   burn_in = burn_in,   constant = constant,   coef = coef,   chol_cov = chol_cov ) yx <- YX(data = y, p = 2) str(yx) #> List of 2 #>  $ X: num [1:48, 1:7] 1 1 1 1 1 1 1 1 1 1 ... #>  $ Y: num [1:48, 1:3] 1.8 3.28 1.95 0.61 1.44 ..."},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YXExo.html","id":null,"dir":"Reference","previous_headings":"","what":"Create Y and X Matrices with Exogenous Variables — YXExo","title":"Create Y and X Matrices with Exogenous Variables — YXExo","text":"function creates dependent variable (Y) predictor variable (X) matrices.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YXExo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create Y and X Matrices with Exogenous Variables — YXExo","text":"","code":"YXExo(data, p, exo_mat)"},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YXExo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create Y and X Matrices with Exogenous Variables — YXExo","text":"data Numeric matrix. time series data dimensions t k, t number observations k number variables. p Integer. order VAR model (number lags). exo_mat Numeric matrix. Matrix exogenous variables dimensions t m.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YXExo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create Y and X Matrices with Exogenous Variables — YXExo","text":"List containing dependent variable (Y) predictor variable (X) matrices. Note resulting matrices t - p rows.","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YXExo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create Y and X Matrices with Exogenous Variables — YXExo","text":"YX() function creates Y X matrices required fitting Vector Autoregressive (VAR) model. Given input data matrix dimensions t k, t number observations k number variables, order VAR model p (number lags), function constructs lagged predictor matrix X dependent variable matrix Y. steps involved creating Y X matrices follows: Determine number observations t number variables k input data matrix. Create matrices X Y store lagged variables dependent variable, respectively. Populate matrices X Y appropriate lagged data. predictors matrix X contains column ones lagged values dependent variables, dependent variable matrix Y contains original values dependent variables. function returns list containing Y X matrices, can used analysis estimation VAR model parameters.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/YXExo.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Create Y and X Matrices with Exogenous Variables — YXExo","text":"Ivan Jacob Agaloos Pesigan","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/reference/simAutoReg-package.html","id":null,"dir":"Reference","previous_headings":"","what":"simAutoReg: Simulate Data from Autoregressive Models — simAutoReg-package","title":"simAutoReg: Simulate Data from Autoregressive Models — simAutoReg-package","text":"Simulate data autoregressive models.","code":""},{"path":[]},{"path":"https://github.com/ijapesigan/simAutoReg/reference/simAutoReg-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"simAutoReg: Simulate Data from Autoregressive Models — simAutoReg-package","text":"Maintainer: Ivan Jacob Agaloos Pesigan ijapesigan@gmail.com (ORCID) [copyright holder]","code":""},{"path":"https://github.com/ijapesigan/simAutoReg/news/index.html","id":"simautoreg-0009000-development-version","dir":"Changelog","previous_headings":"","what":"simAutoReg 0.0.0.9000 (development version)","title":"simAutoReg 0.0.0.9000 (development version)","text":"AR(p) VAR(p) Multivariate normal data Variances","code":""}]
